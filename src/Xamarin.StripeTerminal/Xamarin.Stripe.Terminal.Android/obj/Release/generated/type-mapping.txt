com/stripe/intellij/lang/annotations/Flow = Com.Stripe.Intellij.Lang.Annotations.IFlow
  DEFAULT_SOURCE = DefaultSource
  DEFAULT_TARGET = DefaultTarget
  RETURN_METHOD_TARGET = ReturnMethodTarget
  THIS_SOURCE = ThisSource
  THIS_TARGET = ThisTarget
  source()Ljava/lang/String; = Source()
  sourceIsContainer()Z = SourceIsContainer()
  target()Ljava/lang/String; = Target()
  targetIsContainer()Z = TargetIsContainer()
com/stripe/intellij/lang/annotations/Identifier = Com.Stripe.Intellij.Lang.Annotations.IIdentifier
com/stripe/intellij/lang/annotations/JdkConstants = Com.Stripe.Intellij.Lang.Annotations.JdkConstants
  <init>()V = .ctor()
com/stripe/intellij/lang/annotations/Language = Com.Stripe.Intellij.Lang.Annotations.ILanguage
  prefix()Ljava/lang/String; = Prefix()
  suffix()Ljava/lang/String; = Suffix()
  value()Ljava/lang/String; = Value()
com/stripe/intellij/lang/annotations/MagicConstant = Com.Stripe.Intellij.Lang.Annotations.IMagicConstant
  flags()[J = Flags()
  flagsFromClass()Ljava/lang/Class; = FlagsFromClass()
  intValues()[J = IntValues()
  stringValues()[Ljava/lang/String; = StringValues()
  valuesFromClass()Ljava/lang/Class; = ValuesFromClass()
com/stripe/intellij/lang/annotations/Pattern = Com.Stripe.Intellij.Lang.Annotations.IPattern
  value()Ljava/lang/String; = Value()
com/stripe/intellij/lang/annotations/PrintFormat = Com.Stripe.Intellij.Lang.Annotations.IPrintFormat
com/stripe/intellij/lang/annotations/RegExp = Com.Stripe.Intellij.Lang.Annotations.IRegExp
  prefix()Ljava/lang/String; = Prefix()
  suffix()Ljava/lang/String; = Suffix()
com/stripe/intellij/lang/annotations/Subst = Com.Stripe.Intellij.Lang.Annotations.ISubst
  value()Ljava/lang/String; = Value()
com/stripe/jetbrains/annotations/Contract = Com.Stripe.Jetbrains.Annotations.IContract
  pure()Z = Pure()
  value()Ljava/lang/String; = Value()
com/stripe/jetbrains/annotations/Nls = Com.Stripe.Jetbrains.Annotations.INls
com/stripe/jetbrains/annotations/NonNls = Com.Stripe.Jetbrains.Annotations.INonNls
com/stripe/jetbrains/annotations/NotNull = Com.Stripe.Jetbrains.Annotations.INotNull
  value()Ljava/lang/String; = Value()
com/stripe/jetbrains/annotations/Nullable = Com.Stripe.Jetbrains.Annotations.INullable
  value()Ljava/lang/String; = Value()
com/stripe/jetbrains/annotations/PropertyKey = Com.Stripe.Jetbrains.Annotations.IPropertyKey
  resourceBundle()Ljava/lang/String; = ResourceBundle()
com/stripe/jetbrains/annotations/TestOnly = Com.Stripe.Jetbrains.Annotations.ITestOnly
com/stripe/stripeterminal/BuildConfig = Com.Stripe.Stripeterminal.BuildConfig
  <init>()V = .ctor()
  BUILD_TYPE = BuildType
  DEBUG = Debug
  LIBRARY_PACKAGE_NAME = LibraryPackageName
  VERSION_CODE = VersionCode
  VERSION_NAME = VersionName
com/stripe/stripeterminal/callable/Callback = Com.Stripe.Stripeterminal.Callable.ICallback
  onSuccess()V = OnSuccess()
com/stripe/stripeterminal/callable/Cancelable = Com.Stripe.Stripeterminal.Callable.Cancelable
  isCompleted()Z = IsCompleted
  cancel(Lcom/stripe/stripeterminal/callable/Callback;)V = Cancel(Com.Stripe.Stripeterminal.Callable.ICallback)
com/stripe/stripeterminal/callable/ConnectionTokenCallback = Com.Stripe.Stripeterminal.Callable.IConnectionTokenCallback
  onFailure(Lcom/stripe/stripeterminal/model/external/ConnectionTokenException;)V = OnFailure(Com.Stripe.Stripeterminal.Model.External.ConnectionTokenException)
  onSuccess(Ljava/lang/String;)V = OnSuccess(string)
com/stripe/stripeterminal/callable/ConnectionTokenProvider = Com.Stripe.Stripeterminal.Callable.IConnectionTokenProvider
  fetchConnectionToken(Lcom/stripe/stripeterminal/callable/ConnectionTokenCallback;)V = FetchConnectionToken(Com.Stripe.Stripeterminal.Callable.IConnectionTokenCallback)
com/stripe/stripeterminal/callable/DiscoveryListener = Com.Stripe.Stripeterminal.Callable.IDiscoveryListener
  onUpdateDiscoveredReaders(Ljava/util/List;)V = OnUpdateDiscoveredReaders(System.Collections.Generic.IList<Com.Stripe.Stripeterminal.Model.External.Reader>)
com/stripe/stripeterminal/callable/ErrorCallback = Com.Stripe.Stripeterminal.Callable.IErrorCallback
  onFailure(Lcom/stripe/stripeterminal/model/external/TerminalException;)V = OnFailure(Com.Stripe.Stripeterminal.Model.External.TerminalException)
com/stripe/stripeterminal/callable/PaymentIntentCallback = Com.Stripe.Stripeterminal.Callable.IPaymentIntentCallback
  onSuccess(Lcom/stripe/stripeterminal/model/external/PaymentIntent;)V = OnSuccess(Com.Stripe.Stripeterminal.Model.External.PaymentIntent)
com/stripe/stripeterminal/callable/PaymentMethodCallback = Com.Stripe.Stripeterminal.Callable.IPaymentMethodCallback
  onSuccess(Lcom/stripe/stripeterminal/model/external/PaymentMethod;)V = OnSuccess(Com.Stripe.Stripeterminal.Model.External.PaymentMethod)
com/stripe/stripeterminal/callable/ReaderCallback = Com.Stripe.Stripeterminal.Callable.IReaderCallback
  onSuccess(Lcom/stripe/stripeterminal/model/external/Reader;)V = OnSuccess(Com.Stripe.Stripeterminal.Model.External.Reader)
com/stripe/stripeterminal/callable/ReaderDisplayListener = Com.Stripe.Stripeterminal.Callable.IReaderDisplayListener
  onRequestReaderDisplayMessage(Lcom/stripe/stripeterminal/model/external/ReaderDisplayMessage;)V = OnRequestReaderDisplayMessage(Com.Stripe.Stripeterminal.Model.External.ReaderDisplayMessage)
  onRequestReaderInput(Lcom/stripe/stripeterminal/model/external/ReaderInputOptions;)V = OnRequestReaderInput(Com.Stripe.Stripeterminal.Model.External.ReaderInputOptions)
com/stripe/stripeterminal/callable/ReaderSoftwareUpdateCallback = Com.Stripe.Stripeterminal.Callable.IReaderSoftwareUpdateCallback
  onSuccess(Lcom/stripe/stripeterminal/model/external/ReaderSoftwareUpdate;)V = OnSuccess(Com.Stripe.Stripeterminal.Model.External.ReaderSoftwareUpdate)
com/stripe/stripeterminal/callable/ReaderSoftwareUpdateListener = Com.Stripe.Stripeterminal.Callable.IReaderSoftwareUpdateListener
  onReportReaderSoftwareUpdateProgress(F)V = OnReportReaderSoftwareUpdateProgress(float)
com/stripe/stripeterminal/callable/TerminalListener = Com.Stripe.Stripeterminal.Callable.ITerminalListener
  onConnectionStatusChange(Lcom/stripe/stripeterminal/model/external/ConnectionStatus;)V = OnConnectionStatusChange(Com.Stripe.Stripeterminal.Model.External.ConnectionStatus)
  onPaymentStatusChange(Lcom/stripe/stripeterminal/model/external/PaymentStatus;)V = OnPaymentStatusChange(Com.Stripe.Stripeterminal.Model.External.PaymentStatus)
  onReportLowBatteryWarning()V = OnReportLowBatteryWarning()
  onReportReaderEvent(Lcom/stripe/stripeterminal/model/external/ReaderEvent;)V = OnReportReaderEvent(Com.Stripe.Stripeterminal.Model.External.ReaderEvent)
  onUnexpectedReaderDisconnect(Lcom/stripe/stripeterminal/model/external/Reader;)V = OnUnexpectedReaderDisconnect(Com.Stripe.Stripeterminal.Model.External.Reader)
com/stripe/stripeterminal/model/external/CardDetails = Com.Stripe.Stripeterminal.Model.External.CardDetails
  <init>()V = .ctor()
  CREATOR = Creator
  getBrand()Ljava/lang/String; = Brand
  getCountry()Ljava/lang/String; = Country
  getExpMonth()I = ExpMonth
  getExpYear()I = ExpYear
  getFingerprint()Ljava/lang/String; = Fingerprint
  getFunding()Ljava/lang/String; = Funding
  getLast4()Ljava/lang/String; = Last4
  component1()Ljava/lang/String; = Component1()
  component2()Ljava/lang/String; = Component2()
  component3()I = Component3()
  component4()I = Component4()
  component5()Ljava/lang/String; = Component5()
  component6()Ljava/lang/String; = Component6()
  component7()Ljava/lang/String; = Component7()
  copy(Ljava/lang/String;Ljava/lang/String;IILjava/lang/String;Ljava/lang/String;Ljava/lang/String;)Lcom/stripe/stripeterminal/model/external/CardDetails; = Copy(string, string, int, int, string, string, string)
  describeContents()I = DescribeContents()
  writeToParcel(Landroid/os/Parcel;I)V = WriteToParcel(Android.OS.Parcel, Android.OS.ParcelableWriteFlags)
com/stripe/stripeterminal/model/external/CardPresentDetails = Com.Stripe.Stripeterminal.Model.External.CardPresentDetails
  <init>()V = .ctor()
  CREATOR = Creator
  getBrand()Ljava/lang/String; = Brand
  getCountry()Ljava/lang/String; = Country
  getEmvAuthData()Ljava/lang/String; = EmvAuthData
  getExpMonth()I = ExpMonth
  getExpYear()I = ExpYear
  getFingerprint()Ljava/lang/String; = Fingerprint
  getFunding()Ljava/lang/String; = Funding
  getGeneratedCard()Ljava/lang/String; = GeneratedCard
  getLast4()Ljava/lang/String; = Last4
  getReadMethod()Ljava/lang/String; = ReadMethod
  getReceiptDetails()Lcom/stripe/stripeterminal/model/external/ReceiptDetails; = ReceiptDetails
  component1()Ljava/lang/String; = Component1()
  component10()Ljava/lang/String; = Component10()
  component11()Lcom/stripe/stripeterminal/model/external/ReceiptDetails; = Component11()
  component2()Ljava/lang/String; = Component2()
  component3()Ljava/lang/String; = Component3()
  component4()I = Component4()
  component5()I = Component5()
  component6()Ljava/lang/String; = Component6()
  component7()Ljava/lang/String; = Component7()
  component8()Ljava/lang/String; = Component8()
  component9()Ljava/lang/String; = Component9()
  copy(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;IILjava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Lcom/stripe/stripeterminal/model/external/ReceiptDetails;)Lcom/stripe/stripeterminal/model/external/CardPresentDetails; = Copy(string, string, string, int, int, string, string, string, string, string, Com.Stripe.Stripeterminal.Model.External.ReceiptDetails)
  describeContents()I = DescribeContents()
  writeToParcel(Landroid/os/Parcel;I)V = WriteToParcel(Android.OS.Parcel, Android.OS.ParcelableWriteFlags)
com/stripe/stripeterminal/model/external/Charge = Com.Stripe.Stripeterminal.Model.External.Charge
  CREATOR = Creator
  getAmount()I = Amount
  getAmountRefunded()I = AmountRefunded
  getApplication()Ljava/lang/String; = Application
  getApplicationFee()Ljava/lang/String; = ApplicationFee
  getApplicationFeeAmount()I = ApplicationFeeAmount
  getBalanceTransaction()Ljava/lang/String; = BalanceTransaction
  getCaptured()Z = Captured
  getCreated()J = Created
  getCurrency()Ljava/lang/String; = Currency
  getCustomer()Ljava/lang/String; = Customer
  getDescription()Ljava/lang/String; = Description
  getDispute()Ljava/lang/String; = Dispute
  getFailureCode()Ljava/lang/String; = FailureCode
  getFailureMessage()Ljava/lang/String; = FailureMessage
  getId()Ljava/lang/String; = Id
  getInvoice()Ljava/lang/String; = Invoice
  getLivemode()Z = Livemode
  getMetadata()Ljava/util/Map; = Metadata
  getOnBehalfOf()Ljava/lang/String; = OnBehalfOf
  getOrder()Ljava/lang/String; = Order
  getPaid()Z = Paid
  getPaymentIntentId()Ljava/lang/String; = PaymentIntentId
  getPaymentMethodDetails()Lcom/stripe/stripeterminal/model/external/PaymentMethodDetails; = PaymentMethodDetails
  getPaymentMethodId()Ljava/lang/String; = PaymentMethodId
  getReceiptEmail()Ljava/lang/String; = ReceiptEmail
  getReceiptNumber()Ljava/lang/String; = ReceiptNumber
  getReceiptUrl()Ljava/lang/String; = ReceiptUrl
  getRefunded()Z = Refunded
  getReview()Ljava/lang/String; = Review
  getStatementDescriptor()Ljava/lang/String; = StatementDescriptor
  getStatus()Ljava/lang/String; = Status
  getTransfer()Ljava/lang/String; = Transfer
  getTransferGroup()Ljava/lang/String; = TransferGroup
  component1()Ljava/lang/String; = Component1()
  component10()Ljava/lang/String; = Component10()
  component11()Ljava/lang/String; = Component11()
  component12()Ljava/lang/String; = Component12()
  component13()Ljava/lang/String; = Component13()
  component14()Ljava/lang/String; = Component14()
  component15()Ljava/lang/String; = Component15()
  component16()Ljava/lang/String; = Component16()
  component17()Z = Component17()
  component18()Ljava/util/Map; = Component18()
  component19()Ljava/lang/String; = Component19()
  component2()I = Component2()
  component20()Ljava/lang/String; = Component20()
  component21()Z = Component21()
  component22()Ljava/lang/String; = Component22()
  component23()Ljava/lang/String; = Component23()
  component24()Lcom/stripe/stripeterminal/model/external/PaymentMethodDetails; = Component24()
  component25()Ljava/lang/String; = Component25()
  component26()Ljava/lang/String; = Component26()
  component27()Ljava/lang/String; = Component27()
  component28()Z = Component28()
  component29()Ljava/lang/String; = Component29()
  component3()I = Component3()
  component30()Ljava/lang/String; = Component30()
  component31()Ljava/lang/String; = Component31()
  component32()Ljava/lang/String; = Component32()
  component33()Ljava/lang/String; = Component33()
  component4()Ljava/lang/String; = Component4()
  component5()Ljava/lang/String; = Component5()
  component6()I = Component6()
  component7()Ljava/lang/String; = Component7()
  component8()Z = Component8()
  component9()J = Component9()
  describeContents()I = DescribeContents()
  writeToParcel(Landroid/os/Parcel;I)V = WriteToParcel(Android.OS.Parcel, Android.OS.ParcelableWriteFlags)
com/stripe/stripeterminal/model/external/ConnectionStatus = Com.Stripe.Stripeterminal.Model.External.ConnectionStatus
  CONNECTED = Connected
  CONNECTING = Connecting
  NOT_CONNECTED = NotConnected
  valueOf(Ljava/lang/String;)Lcom/stripe/stripeterminal/model/external/ConnectionStatus; = ValueOf(string)
  values()[Lcom/stripe/stripeterminal/model/external/ConnectionStatus; = Values()
com/stripe/stripeterminal/model/external/ConnectionTokenException = Com.Stripe.Stripeterminal.Model.External.ConnectionTokenException
  <init>(Ljava/lang/String;)V = .ctor(string)
  <init>(Ljava/lang/String;Ljava/lang/Throwable;)V = .ctor(string, Java.Lang.Throwable)
com/stripe/stripeterminal/model/external/DeviceType = Com.Stripe.Stripeterminal.Model.External.DeviceType
  CHIPPER_2X = Chipper2x
  valueOf(Ljava/lang/String;)Lcom/stripe/stripeterminal/model/external/DeviceType; = ValueOf(string)
  values()[Lcom/stripe/stripeterminal/model/external/DeviceType; = Values()
com/stripe/stripeterminal/model/external/DiscoveryConfiguration = Com.Stripe.Stripeterminal.Model.External.DiscoveryConfiguration
  <init>()V = .ctor()
  <init>(I)V = .ctor(int)
  <init>(ILcom/stripe/stripeterminal/model/external/DeviceType;)V = .ctor(int, Com.Stripe.Stripeterminal.Model.External.DeviceType)
  <init>(ILcom/stripe/stripeterminal/model/external/DeviceType;Z)V = .ctor(int, Com.Stripe.Stripeterminal.Model.External.DeviceType, bool)
  getDeviceType()Lcom/stripe/stripeterminal/model/external/DeviceType; = DeviceType
  isSimulated()Z = IsSimulated
  getTimeout()I = Timeout
  component1()I = Component1()
  component2()Lcom/stripe/stripeterminal/model/external/DeviceType; = Component2()
  component3()Z = Component3()
  copy(ILcom/stripe/stripeterminal/model/external/DeviceType;Z)Lcom/stripe/stripeterminal/model/external/DiscoveryConfiguration; = Copy(int, Com.Stripe.Stripeterminal.Model.External.DeviceType, bool)
com/stripe/stripeterminal/model/external/PaymentIntent = Com.Stripe.Stripeterminal.Model.External.PaymentIntent
  CREATOR = Creator
  getAmount()I = Amount
  getAmountCapturable()I = AmountCapturable
  getAmountReceived()I = AmountReceived
  getApplication()Ljava/lang/String; = Application
  getApplicationFeeAmount()I = ApplicationFeeAmount
  getCanceledAt()J = CanceledAt
  getCancellationReason()Ljava/lang/String; = CancellationReason
  getCaptureMethod()Ljava/lang/String; = CaptureMethod
  getCharges()Ljava/util/List; = Charges
  getClientSecret()Ljava/lang/String; = ClientSecret
  getConfirmationMethod()Ljava/lang/String; = ConfirmationMethod
  getCreated()J = Created
  getCurrency()Ljava/lang/String; = Currency
  getCustomer()Ljava/lang/String; = Customer
  getDescription()Ljava/lang/String; = Description
  getId()Ljava/lang/String; = Id
  getInvoice()Ljava/lang/String; = Invoice
  getLivemode()Z = Livemode
  getMetadata()Ljava/util/Map; = Metadata
  getOnBehalfOf()Ljava/lang/String; = OnBehalfOf
  getPaymentMethodId()Ljava/lang/String; = PaymentMethodId
  getReceiptEmail()Ljava/lang/String; = ReceiptEmail
  getReview()Ljava/lang/String; = Review
  getStatementDescriptor()Ljava/lang/String; = StatementDescriptor
  getStatus()Lcom/stripe/stripeterminal/model/external/PaymentIntentStatus; = Status
  setStatus(Lcom/stripe/stripeterminal/model/external/PaymentIntentStatus;)V = Status
  getTransferGroup()Ljava/lang/String; = TransferGroup
  component1()Ljava/lang/String; = Component1()
  component11()Ljava/lang/String; = Component11()
  component12()Ljava/lang/String; = Component12()
  component13()J = Component13()
  component14()Ljava/lang/String; = Component14()
  component15()Ljava/lang/String; = Component15()
  component16()Ljava/lang/String; = Component16()
  component17()Ljava/lang/String; = Component17()
  component19()Z = Component19()
  component2()I = Component2()
  component20()Ljava/util/Map; = Component20()
  component21()Ljava/lang/String; = Component21()
  component22()Ljava/lang/String; = Component22()
  component23()Ljava/lang/String; = Component23()
  component24()Ljava/lang/String; = Component24()
  component25()Ljava/lang/String; = Component25()
  component26()Lcom/stripe/stripeterminal/model/external/PaymentIntentStatus; = Component26()
  component27()Ljava/lang/String; = Component27()
  component3()I = Component3()
  component4()I = Component4()
  component5()Ljava/lang/String; = Component5()
  component6()I = Component6()
  component7()J = Component7()
  component8()Ljava/lang/String; = Component8()
  component9()Ljava/lang/String; = Component9()
  describeContents()I = DescribeContents()
  writeToParcel(Landroid/os/Parcel;I)V = WriteToParcel(Android.OS.Parcel, Android.OS.ParcelableWriteFlags)
com/stripe/stripeterminal/model/external/PaymentIntentParameters = Com.Stripe.Stripeterminal.Model.External.PaymentIntentParameters
  getAmount()Ljava/lang/Integer; = Amount
  getApplicationFeeAmount()Ljava/lang/Integer; = ApplicationFeeAmount
  getCurrency()Ljava/lang/String; = Currency
  getCustomer()Ljava/lang/String; = Customer
  getDescription()Ljava/lang/String; = Description
  getMetadata()Ljava/util/Map; = Metadata
  getOnBehalfOf()Ljava/lang/String; = OnBehalfOf
  getReceiptEmail()Ljava/lang/String; = ReceiptEmail
  getStatementDescriptor()Ljava/lang/String; = StatementDescriptor
  getTransferDataDestination()Ljava/lang/String; = TransferDataDestination
  getTransferGroup()Ljava/lang/String; = TransferGroup
com/stripe/stripeterminal/model/external/PaymentIntentStatus = Com.Stripe.Stripeterminal.Model.External.PaymentIntentStatus
  CANCELED = Canceled
  REQUIRES_CAPTURE = RequiresCapture
  REQUIRES_CONFIRMATION = RequiresConfirmation
  REQUIRES_PAYMENT_METHOD = RequiresPaymentMethod
  valueOf(Ljava/lang/String;)Lcom/stripe/stripeterminal/model/external/PaymentIntentStatus; = ValueOf(string)
  values()[Lcom/stripe/stripeterminal/model/external/PaymentIntentStatus; = Values()
com/stripe/stripeterminal/model/external/PaymentMethod = Com.Stripe.Stripeterminal.Model.External.PaymentMethod
  CREATOR = Creator
  getCardDetails()Lcom/stripe/stripeterminal/model/external/CardDetails; = CardDetails
  getCustomer()Ljava/lang/String; = Customer
  getId()Ljava/lang/String; = Id
  getLivemode()Z = Livemode
  getMetadata()Ljava/util/Map; = Metadata
  component1()Ljava/lang/String; = Component1()
  component3()Lcom/stripe/stripeterminal/model/external/CardDetails; = Component3()
  component5()Ljava/lang/String; = Component5()
  component6()Z = Component6()
  component7()Ljava/util/Map; = Component7()
  copy(Ljava/lang/String;Ljava/lang/String;Lcom/stripe/stripeterminal/model/external/CardDetails;JLjava/lang/String;ZLjava/util/Map;Ljava/lang/String;)Lcom/stripe/stripeterminal/model/external/PaymentMethod; = Copy(string, string, Com.Stripe.Stripeterminal.Model.External.CardDetails, long, string, bool, System.Collections.Generic.IDictionary<string, string>, string)
  describeContents()I = DescribeContents()
  writeToParcel(Landroid/os/Parcel;I)V = WriteToParcel(Android.OS.Parcel, Android.OS.ParcelableWriteFlags)
com/stripe/stripeterminal/model/external/PaymentMethodDetails = Com.Stripe.Stripeterminal.Model.External.PaymentMethodDetails
  <init>()V = .ctor()
  CREATOR = Creator
  getCardPresentDetails()Lcom/stripe/stripeterminal/model/external/CardPresentDetails; = CardPresentDetails
  component2()Lcom/stripe/stripeterminal/model/external/CardPresentDetails; = Component2()
  copy(Lcom/stripe/stripeterminal/model/external/PaymentMethodType;Lcom/stripe/stripeterminal/model/external/CardPresentDetails;)Lcom/stripe/stripeterminal/model/external/PaymentMethodDetails; = Copy(Com.Stripe.Stripeterminal.Model.External.PaymentMethodType, Com.Stripe.Stripeterminal.Model.External.CardPresentDetails)
  describeContents()I = DescribeContents()
  writeToParcel(Landroid/os/Parcel;I)V = WriteToParcel(Android.OS.Parcel, Android.OS.ParcelableWriteFlags)
com/stripe/stripeterminal/model/external/PaymentMethodType = Com.Stripe.Stripeterminal.Model.External.PaymentMethodType
  CARD = Card
  CARD_PRESENT = CardPresent
  valueOf(Ljava/lang/String;)Lcom/stripe/stripeterminal/model/external/PaymentMethodType; = ValueOf(string)
  values()[Lcom/stripe/stripeterminal/model/external/PaymentMethodType; = Values()
com/stripe/stripeterminal/model/external/PaymentStatus = Com.Stripe.Stripeterminal.Model.External.PaymentStatus
  NOT_READY = NotReady
  PROCESSING = Processing
  READY = Ready
  WAITING_FOR_INPUT = WaitingForInput
  valueOf(Ljava/lang/String;)Lcom/stripe/stripeterminal/model/external/PaymentStatus; = ValueOf(string)
  values()[Lcom/stripe/stripeterminal/model/external/PaymentStatus; = Values()
com/stripe/stripeterminal/model/external/Reader = Com.Stripe.Stripeterminal.Model.External.Reader
  getBatteryLevel()Ljava/lang/Float; = BatteryLevel
  getDeviceType()Lcom/stripe/stripeterminal/model/external/DeviceType; = DeviceType
  isSimulated()Z = IsSimulated
  getSerialNumber()Ljava/lang/String; = SerialNumber
  getSoftwareVersion()Ljava/lang/String; = SoftwareVersion
com/stripe/stripeterminal/model/external/ReaderDisplayMessage = Com.Stripe.Stripeterminal.Model.External.ReaderDisplayMessage
  INSERT_CARD = InsertCard
  INSERT_OR_SWIPE_CARD = InsertOrSwipeCard
  MULTIPLE_CONTACTLESS_CARDS_DETECTED = MultipleContactlessCardsDetected
  REMOVE_CARD = RemoveCard
  RETRY_CARD = RetryCard
  SWIPE_CARD = SwipeCard
  TRY_ANOTHER_CARD = TryAnotherCard
  TRY_ANOTHER_READ_METHOD = TryAnotherReadMethod
  valueOf(Ljava/lang/String;)Lcom/stripe/stripeterminal/model/external/ReaderDisplayMessage; = ValueOf(string)
  values()[Lcom/stripe/stripeterminal/model/external/ReaderDisplayMessage; = Values()
com/stripe/stripeterminal/model/external/ReaderEvent = Com.Stripe.Stripeterminal.Model.External.ReaderEvent
  CARD_INSERTED = CardInserted
  CARD_REMOVED = CardRemoved
  valueOf(Ljava/lang/String;)Lcom/stripe/stripeterminal/model/external/ReaderEvent; = ValueOf(string)
  values()[Lcom/stripe/stripeterminal/model/external/ReaderEvent; = Values()
com/stripe/stripeterminal/model/external/ReaderInputOptions = Com.Stripe.Stripeterminal.Model.External.ReaderInputOptions
com/stripe/stripeterminal/model/external/ReaderSoftwareUpdate = Com.Stripe.Stripeterminal.Model.External.ReaderSoftwareUpdate
  hasConfigUpdate()Z = HasConfigUpdate
  hasFirmwareUpdate()Z = HasFirmwareUpdate
  hasKeyUpdate()Z = HasKeyUpdate
  getTimeEstimate()Lcom/stripe/stripeterminal/model/external/ReaderSoftwareUpdate$UpdateTimeEstimate; = TimeEstimate
  getVersion()Ljava/lang/String; = Version
com/stripe/stripeterminal/model/external/ReadReusableCardParameters = Com.Stripe.Stripeterminal.Model.External.ReadReusableCardParameters
  Companion = Companion
  getNULL()Lcom/stripe/stripeterminal/model/external/ReadReusableCardParameters; = NULL
com/stripe/stripeterminal/model/external/ReceiptDetails = Com.Stripe.Stripeterminal.Model.External.ReceiptDetails
  <init>()V = .ctor()
  CREATOR = Creator
  getApplicationCryptogram()Ljava/lang/String; = ApplicationCryptogram
  getApplicationPreferredName()Ljava/lang/String; = ApplicationPreferredName
  getAuthorizationCode()Ljava/lang/String; = AuthorizationCode
  getAuthorizationResponseCode()Ljava/lang/String; = AuthorizationResponseCode
  getCvm()Ljava/lang/String; = Cvm
  getDedicatedFileName()Ljava/lang/String; = DedicatedFileName
  getTsi()Ljava/lang/String; = Tsi
  getTvr()Ljava/lang/String; = Tvr
  component1()Ljava/lang/String; = Component1()
  component2()Ljava/lang/String; = Component2()
  component3()Ljava/lang/String; = Component3()
  component4()Ljava/lang/String; = Component4()
  component5()Ljava/lang/String; = Component5()
  component6()Ljava/lang/String; = Component6()
  component7()Ljava/lang/String; = Component7()
  component8()Ljava/lang/String; = Component8()
  copy(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Lcom/stripe/stripeterminal/model/external/ReceiptDetails; = Copy(string, string, string, string, string, string, string, string)
  describeContents()I = DescribeContents()
  writeToParcel(Landroid/os/Parcel;I)V = WriteToParcel(Android.OS.Parcel, Android.OS.ParcelableWriteFlags)
com/stripe/stripeterminal/model/external/TerminalException = Com.Stripe.Stripeterminal.Model.External.TerminalException
  <init>(Lcom/stripe/stripeterminal/model/external/TerminalException$TerminalErrorCode;Ljava/lang/String;)V = .ctor(Com.Stripe.Stripeterminal.Model.External.TerminalException.TerminalErrorCode, string)
  getErrorCode()Lcom/stripe/stripeterminal/model/external/TerminalException$TerminalErrorCode; = ErrorCode
  getErrorMessage()Ljava/lang/String; = ErrorMessage
  getPaymentIntent()Lcom/stripe/stripeterminal/model/external/PaymentIntent; = PaymentIntent
com/stripe/stripeterminal/Terminal = Com.Stripe.Stripeterminal.StripeTerminal
  Companion = Companion
  getConnectedReader()Lcom/stripe/stripeterminal/model/external/Reader; = ConnectedReader
  getConnectionStatus()Lcom/stripe/stripeterminal/model/external/ConnectionStatus; = ConnectionStatus
  getInstance()Lcom/stripe/stripeterminal/Terminal; = Instance
  isInitialized()Z = IsInitialized
  getPaymentStatus()Lcom/stripe/stripeterminal/model/external/PaymentStatus; = PaymentStatus
  cancelPaymentIntent(Lcom/stripe/stripeterminal/model/external/PaymentIntent;Lcom/stripe/stripeterminal/callable/PaymentIntentCallback;)V = CancelPaymentIntent(Com.Stripe.Stripeterminal.Model.External.PaymentIntent, Com.Stripe.Stripeterminal.Callable.IPaymentIntentCallback)
  checkForUpdate(Lcom/stripe/stripeterminal/callable/ReaderSoftwareUpdateCallback;)Lcom/stripe/stripeterminal/callable/Cancelable; = CheckForUpdate(Com.Stripe.Stripeterminal.Callable.IReaderSoftwareUpdateCallback)
  clearCachedCredentials()V = ClearCachedCredentials()
  collectPaymentMethod(Lcom/stripe/stripeterminal/model/external/PaymentIntent;Lcom/stripe/stripeterminal/callable/ReaderDisplayListener;Lcom/stripe/stripeterminal/callable/PaymentIntentCallback;)Lcom/stripe/stripeterminal/callable/Cancelable; = CollectPaymentMethod(Com.Stripe.Stripeterminal.Model.External.PaymentIntent, Com.Stripe.Stripeterminal.Callable.IReaderDisplayListener, Com.Stripe.Stripeterminal.Callable.IPaymentIntentCallback)
  connectReader(Lcom/stripe/stripeterminal/model/external/Reader;Lcom/stripe/stripeterminal/callable/ReaderCallback;)V = ConnectReader(Com.Stripe.Stripeterminal.Model.External.Reader, Com.Stripe.Stripeterminal.Callable.IReaderCallback)
  createPaymentIntent(Lcom/stripe/stripeterminal/model/external/PaymentIntentParameters;Lcom/stripe/stripeterminal/callable/PaymentIntentCallback;)V = CreatePaymentIntent(Com.Stripe.Stripeterminal.Model.External.PaymentIntentParameters, Com.Stripe.Stripeterminal.Callable.IPaymentIntentCallback)
  disconnectReader(Lcom/stripe/stripeterminal/callable/Callback;)V = DisconnectReader(Com.Stripe.Stripeterminal.Callable.ICallback)
  discoverReaders(Lcom/stripe/stripeterminal/model/external/DiscoveryConfiguration;Lcom/stripe/stripeterminal/callable/DiscoveryListener;Lcom/stripe/stripeterminal/callable/Callback;)Lcom/stripe/stripeterminal/callable/Cancelable; = DiscoverReaders(Com.Stripe.Stripeterminal.Model.External.DiscoveryConfiguration, Com.Stripe.Stripeterminal.Callable.IDiscoveryListener, Com.Stripe.Stripeterminal.Callable.ICallback)
  initTerminal(Landroid/content/Context;Lcom/stripe/stripeterminal/callable/ConnectionTokenProvider;Lcom/stripe/stripeterminal/callable/TerminalListener;)V = InitTerminal(Android.Content.Context, Com.Stripe.Stripeterminal.Callable.IConnectionTokenProvider, Com.Stripe.Stripeterminal.Callable.ITerminalListener)
  installUpdate(Lcom/stripe/stripeterminal/model/external/ReaderSoftwareUpdate;Lcom/stripe/stripeterminal/callable/ReaderSoftwareUpdateListener;Lcom/stripe/stripeterminal/callable/Callback;)Lcom/stripe/stripeterminal/callable/Cancelable; = InstallUpdate(Com.Stripe.Stripeterminal.Model.External.ReaderSoftwareUpdate, Com.Stripe.Stripeterminal.Callable.IReaderSoftwareUpdateListener, Com.Stripe.Stripeterminal.Callable.ICallback)
  processPayment(Lcom/stripe/stripeterminal/model/external/PaymentIntent;Lcom/stripe/stripeterminal/callable/PaymentIntentCallback;)V = ProcessPayment(Com.Stripe.Stripeterminal.Model.External.PaymentIntent, Com.Stripe.Stripeterminal.Callable.IPaymentIntentCallback)
  readReusableCard(Lcom/stripe/stripeterminal/model/external/ReadReusableCardParameters;Lcom/stripe/stripeterminal/callable/ReaderDisplayListener;Lcom/stripe/stripeterminal/callable/PaymentMethodCallback;)Lcom/stripe/stripeterminal/callable/Cancelable; = ReadReusableCard(Com.Stripe.Stripeterminal.Model.External.ReadReusableCardParameters, Com.Stripe.Stripeterminal.Callable.IReaderDisplayListener, Com.Stripe.Stripeterminal.Callable.IPaymentMethodCallback)
  retrievePaymentIntent(Ljava/lang/String;Lcom/stripe/stripeterminal/callable/PaymentIntentCallback;)V = RetrievePaymentIntent(string, Com.Stripe.Stripeterminal.Callable.IPaymentIntentCallback)
  setTerminalListener(Lcom/stripe/stripeterminal/callable/TerminalListener;)V = SetTerminalListener(Com.Stripe.Stripeterminal.Callable.ITerminalListener)
com/stripe/stripeterminal/TerminalLifecycleObserver = Com.Stripe.Stripeterminal.TerminalLifecycleObserver
  <init>()V = .ctor()
  Companion = Companion
  getInstance()Lcom/stripe/stripeterminal/TerminalLifecycleObserver; = Instance
  onActivityCreated(Landroid/app/Activity;Landroid/os/Bundle;)V = OnActivityCreated(Android.App.Activity, Android.OS.Bundle)
  onActivityDestroyed(Landroid/app/Activity;)V = OnActivityDestroyed(Android.App.Activity)
  onActivityPaused(Landroid/app/Activity;)V = OnActivityPaused(Android.App.Activity)
  onActivityResumed(Landroid/app/Activity;)V = OnActivityResumed(Android.App.Activity)
  onActivitySaveInstanceState(Landroid/app/Activity;Landroid/os/Bundle;)V = OnActivitySaveInstanceState(Android.App.Activity, Android.OS.Bundle)
  onActivityStarted(Landroid/app/Activity;)V = OnActivityStarted(Android.App.Activity)
  onActivityStopped(Landroid/app/Activity;)V = OnActivityStopped(Android.App.Activity)
  onPause()V = OnPause()
  onResume()V = OnResume()
  onStart()V = OnStart()
  onStop()V = OnStop()
  onTrimMemory(ILandroid/app/Application;)V = OnTrimMemory(int, Android.App.Application)
javax/annotation/CheckForNull = Javax.Annotation.ICheckForNull
javax/annotation/CheckForSigned = Javax.Annotation.ICheckForSigned
javax/annotation/CheckReturnValue = Javax.Annotation.ICheckReturnValue
  when()Ljavax/annotation/meta/When; = When()
javax/annotation/concurrent/GuardedBy = Javax.Annotation.Concurrent.IGuardedBy
  value()Ljava/lang/String; = Value()
javax/annotation/concurrent/Immutable = Javax.Annotation.Concurrent.IImmutable
javax/annotation/concurrent/NotThreadSafe = Javax.Annotation.Concurrent.INotThreadSafe
javax/annotation/concurrent/ThreadSafe = Javax.Annotation.Concurrent.IThreadSafe
javax/annotation/Detainted = Javax.Annotation.IDetainted
javax/annotation/MatchesPattern = Javax.Annotation.IMatchesPattern
  flags()I = Flags()
  value()Ljava/lang/String; = Value()
javax/annotation/meta/Exclusive = Javax.Annotation.Meta.IExclusive
javax/annotation/meta/Exhaustive = Javax.Annotation.Meta.IExhaustive
javax/annotation/meta/TypeQualifier = Javax.Annotation.Meta.ITypeQualifier
  applicableTo()Ljava/lang/Class; = ApplicableTo()
javax/annotation/meta/TypeQualifierDefault = Javax.Annotation.Meta.ITypeQualifierDefault
  value()[Ljava/lang/annotation/ElementType; = Value()
javax/annotation/meta/TypeQualifierNickname = Javax.Annotation.Meta.ITypeQualifierNickname
javax/annotation/meta/TypeQualifierValidator = Javax.Annotation.Meta.ITypeQualifierValidator
  forConstantValue(Ljava/lang/annotation/Annotation;Ljava/lang/Object;)Ljavax/annotation/meta/When; = ForConstantValue(Java.Lang.Object, Java.Lang.Object)
javax/annotation/meta/When = Javax.Annotation.Meta.When
  ALWAYS = Always
  MAYBE = Maybe
  NEVER = Never
  UNKNOWN = Unknown
  valueOf(Ljava/lang/String;)Ljavax/annotation/meta/When; = ValueOf(string)
  values()[Ljavax/annotation/meta/When; = Values()
javax/annotation/Nonnegative = Javax.Annotation.INonnegative
  when()Ljavax/annotation/meta/When; = When()
javax/annotation/Nonnull = Javax.Annotation.INonnull
  when()Ljavax/annotation/meta/When; = When()
javax/annotation/Nullable = Javax.Annotation.INullable
javax/annotation/OverridingMethodsMustInvokeSuper = Javax.Annotation.IOverridingMethodsMustInvokeSuper
javax/annotation/ParametersAreNonnullByDefault = Javax.Annotation.IParametersAreNonnullByDefault
javax/annotation/ParametersAreNullableByDefault = Javax.Annotation.IParametersAreNullableByDefault
javax/annotation/PropertyKey = Javax.Annotation.IPropertyKey
  when()Ljavax/annotation/meta/When; = When()
javax/annotation/RegEx = Javax.Annotation.IRegEx
  when()Ljavax/annotation/meta/When; = When()
javax/annotation/Signed = Javax.Annotation.ISigned
javax/annotation/Syntax = Javax.Annotation.ISyntax
  value()Ljava/lang/String; = Value()
  when()Ljavax/annotation/meta/When; = When()
javax/annotation/Tainted = Javax.Annotation.ITainted
javax/annotation/Untainted = Javax.Annotation.IUntainted
  when()Ljavax/annotation/meta/When; = When()
javax/annotation/WillClose = Javax.Annotation.IWillClose
javax/annotation/WillCloseWhenClosed = Javax.Annotation.IWillCloseWhenClosed
javax/annotation/WillNotClose = Javax.Annotation.IWillNotClose
junit/extensions/ActiveTestSuite = Junit.Extensions.ActiveTestSuite
  <init>()V = .ctor()
  <init>(Ljava/lang/Class;)V = .ctor(Java.Lang.Class)
  <init>(Ljava/lang/Class;Ljava/lang/String;)V = .ctor(Java.Lang.Class, string)
  <init>(Ljava/lang/String;)V = .ctor(string)
  runFinished()V = RunFinished()
junit/extensions/RepeatedTest = Junit.Extensions.RepeatedTest
  <init>(Ljunit/framework/Test;I)V = .ctor(Junit.Framework.ITest, int)
junit/extensions/TestDecorator = Junit.Extensions.TestDecorator
  <init>(Ljunit/framework/Test;)V = .ctor(Junit.Framework.ITest)
  fTest = FTest
  getTest()Ljunit/framework/Test; = Test
  basicRun(Ljunit/framework/TestResult;)V = BasicRun(Junit.Framework.TestResult)
  countTestCases()I = CountTestCases()
  run(Ljunit/framework/TestResult;)V = Run(Junit.Framework.TestResult)
junit/extensions/TestSetup = Junit.Extensions.TestSetup
  <init>(Ljunit/framework/Test;)V = .ctor(Junit.Framework.ITest)
  setUp()V = SetUp()
  tearDown()V = TearDown()
junit/framework/Assert = Junit.Framework.Assert
  <init>()V = .ctor()
  assertEquals(ZZ)V = AssertEquals(bool, bool)
  assertEquals(BB)V = AssertEquals(sbyte, sbyte)
  assertEquals(CC)V = AssertEquals(char, char)
  assertEquals(DDD)V = AssertEquals(double, double, double)
  assertEquals(FFF)V = AssertEquals(float, float, float)
  assertEquals(II)V = AssertEquals(int, int)
  assertEquals(Ljava/lang/Object;Ljava/lang/Object;)V = AssertEquals(Java.Lang.Object, Java.Lang.Object)
  assertEquals(Ljava/lang/String;ZZ)V = AssertEquals(string, bool, bool)
  assertEquals(Ljava/lang/String;BB)V = AssertEquals(string, sbyte, sbyte)
  assertEquals(Ljava/lang/String;CC)V = AssertEquals(string, char, char)
  assertEquals(Ljava/lang/String;DDD)V = AssertEquals(string, double, double, double)
  assertEquals(Ljava/lang/String;FFF)V = AssertEquals(string, float, float, float)
  assertEquals(Ljava/lang/String;II)V = AssertEquals(string, int, int)
  assertEquals(Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Object;)V = AssertEquals(string, Java.Lang.Object, Java.Lang.Object)
  assertEquals(Ljava/lang/String;Ljava/lang/String;)V = AssertEquals(string, string)
  assertEquals(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V = AssertEquals(string, string, string)
  assertEquals(Ljava/lang/String;JJ)V = AssertEquals(string, long, long)
  assertEquals(Ljava/lang/String;SS)V = AssertEquals(string, short, short)
  assertEquals(JJ)V = AssertEquals(long, long)
  assertEquals(SS)V = AssertEquals(short, short)
  assertFalse(Z)V = AssertFalse(bool)
  assertFalse(Ljava/lang/String;Z)V = AssertFalse(string, bool)
  assertNotNull(Ljava/lang/Object;)V = AssertNotNull(Java.Lang.Object)
  assertNotNull(Ljava/lang/String;Ljava/lang/Object;)V = AssertNotNull(string, Java.Lang.Object)
  assertNotSame(Ljava/lang/Object;Ljava/lang/Object;)V = AssertNotSame(Java.Lang.Object, Java.Lang.Object)
  assertNotSame(Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Object;)V = AssertNotSame(string, Java.Lang.Object, Java.Lang.Object)
  assertNull(Ljava/lang/Object;)V = AssertNull(Java.Lang.Object)
  assertNull(Ljava/lang/String;Ljava/lang/Object;)V = AssertNull(string, Java.Lang.Object)
  assertSame(Ljava/lang/Object;Ljava/lang/Object;)V = AssertSame(Java.Lang.Object, Java.Lang.Object)
  assertSame(Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Object;)V = AssertSame(string, Java.Lang.Object, Java.Lang.Object)
  assertTrue(Z)V = AssertTrue(bool)
  assertTrue(Ljava/lang/String;Z)V = AssertTrue(string, bool)
  fail()V = Fail()
  fail(Ljava/lang/String;)V = Fail(string)
  failNotEquals(Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Object;)V = FailNotEquals(string, Java.Lang.Object, Java.Lang.Object)
  failNotSame(Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Object;)V = FailNotSame(string, Java.Lang.Object, Java.Lang.Object)
  failSame(Ljava/lang/String;)V = FailSame(string)
  format(Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/String; = Format(string, Java.Lang.Object, Java.Lang.Object)
junit/framework/AssertionFailedError = Junit.Framework.AssertionFailedError
  <init>()V = .ctor()
  <init>(Ljava/lang/String;)V = .ctor(string)
junit/framework/ComparisonCompactor = Junit.Framework.ComparisonCompactor
  <init>(ILjava/lang/String;Ljava/lang/String;)V = .ctor(int, string, string)
  compact(Ljava/lang/String;)Ljava/lang/String; = Compact(string)
junit/framework/ComparisonFailure = Junit.Framework.ComparisonFailure
  <init>(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V = .ctor(string, string, string)
  getActual()Ljava/lang/String; = Actual
  getExpected()Ljava/lang/String; = Expected
junit/framework/JUnit4TestAdapter = Junit.Framework.JUnit4TestAdapter
  <init>(Ljava/lang/Class;)V = .ctor(Java.Lang.Class)
  <init>(Ljava/lang/Class;Ljunit/framework/JUnit4TestAdapterCache;)V = .ctor(Java.Lang.Class, Junit.Framework.JUnit4TestAdapterCache)
  getTestClass()Ljava/lang/Class; = TestClass
  getTests()Ljava/util/List; = Tests
  countTestCases()I = CountTestCases()
  run(Ljunit/framework/TestResult;)V = Run(Junit.Framework.TestResult)
junit/framework/JUnit4TestAdapterCache = Junit.Framework.JUnit4TestAdapterCache
  <init>()V = .ctor()
  getDefault()Ljunit/framework/JUnit4TestAdapterCache; = Default
junit/framework/JUnit4TestCaseFacade = Junit.Framework.JUnit4TestCaseFacade
  countTestCases()I = CountTestCases()
  run(Ljunit/framework/TestResult;)V = Run(Junit.Framework.TestResult)
junit/framework/Protectable = Junit.Framework.IProtectable
  protect()V = Protect()
junit/framework/Test = Junit.Framework.ITest
  countTestCases()I = CountTestCases()
  run(Ljunit/framework/TestResult;)V = Run(Junit.Framework.TestResult)
junit/framework/TestCase = Junit.Framework.TestCase
  <init>()V = .ctor()
  <init>(Ljava/lang/String;)V = .ctor(string)
  getName()Ljava/lang/String; = Name
  setName(Ljava/lang/String;)V = Name
  assertEquals(ZZ)V = AssertEquals(bool, bool)
  assertEquals(BB)V = AssertEquals(sbyte, sbyte)
  assertEquals(CC)V = AssertEquals(char, char)
  assertEquals(DDD)V = AssertEquals(double, double, double)
  assertEquals(FFF)V = AssertEquals(float, float, float)
  assertEquals(II)V = AssertEquals(int, int)
  assertEquals(Ljava/lang/Object;Ljava/lang/Object;)V = AssertEquals(Java.Lang.Object, Java.Lang.Object)
  assertEquals(Ljava/lang/String;ZZ)V = AssertEquals(string, bool, bool)
  assertEquals(Ljava/lang/String;BB)V = AssertEquals(string, sbyte, sbyte)
  assertEquals(Ljava/lang/String;CC)V = AssertEquals(string, char, char)
  assertEquals(Ljava/lang/String;DDD)V = AssertEquals(string, double, double, double)
  assertEquals(Ljava/lang/String;FFF)V = AssertEquals(string, float, float, float)
  assertEquals(Ljava/lang/String;II)V = AssertEquals(string, int, int)
  assertEquals(Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Object;)V = AssertEquals(string, Java.Lang.Object, Java.Lang.Object)
  assertEquals(Ljava/lang/String;Ljava/lang/String;)V = AssertEquals(string, string)
  assertEquals(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V = AssertEquals(string, string, string)
  assertEquals(Ljava/lang/String;JJ)V = AssertEquals(string, long, long)
  assertEquals(Ljava/lang/String;SS)V = AssertEquals(string, short, short)
  assertEquals(JJ)V = AssertEquals(long, long)
  assertEquals(SS)V = AssertEquals(short, short)
  assertFalse(Z)V = AssertFalse(bool)
  assertFalse(Ljava/lang/String;Z)V = AssertFalse(string, bool)
  assertNotNull(Ljava/lang/Object;)V = AssertNotNull(Java.Lang.Object)
  assertNotNull(Ljava/lang/String;Ljava/lang/Object;)V = AssertNotNull(string, Java.Lang.Object)
  assertNotSame(Ljava/lang/Object;Ljava/lang/Object;)V = AssertNotSame(Java.Lang.Object, Java.Lang.Object)
  assertNotSame(Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Object;)V = AssertNotSame(string, Java.Lang.Object, Java.Lang.Object)
  assertNull(Ljava/lang/Object;)V = AssertNull(Java.Lang.Object)
  assertNull(Ljava/lang/String;Ljava/lang/Object;)V = AssertNull(string, Java.Lang.Object)
  assertSame(Ljava/lang/Object;Ljava/lang/Object;)V = AssertSame(Java.Lang.Object, Java.Lang.Object)
  assertSame(Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Object;)V = AssertSame(string, Java.Lang.Object, Java.Lang.Object)
  assertTrue(Z)V = AssertTrue(bool)
  assertTrue(Ljava/lang/String;Z)V = AssertTrue(string, bool)
  countTestCases()I = CountTestCases()
  createResult()Ljunit/framework/TestResult; = CreateResult()
  fail()V = Fail()
  fail(Ljava/lang/String;)V = Fail(string)
  failNotEquals(Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Object;)V = FailNotEquals(string, Java.Lang.Object, Java.Lang.Object)
  failNotSame(Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Object;)V = FailNotSame(string, Java.Lang.Object, Java.Lang.Object)
  failSame(Ljava/lang/String;)V = FailSame(string)
  format(Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/String; = Format(string, Java.Lang.Object, Java.Lang.Object)
  run()Ljunit/framework/TestResult; = Run()
  run(Ljunit/framework/TestResult;)V = Run(Junit.Framework.TestResult)
  runBare()V = RunBare()
  runTest()V = RunTest()
  setUp()V = SetUp()
  tearDown()V = TearDown()
junit/framework/TestFailure = Junit.Framework.TestFailure
  <init>(Ljunit/framework/Test;Ljava/lang/Throwable;)V = .ctor(Junit.Framework.ITest, Java.Lang.Throwable)
  fFailedTest = FFailedTest
  fThrownException = FThrownException
  isFailure()Z = IsFailure
  exceptionMessage()Ljava/lang/String; = ExceptionMessage()
  failedTest()Ljunit/framework/Test; = FailedTest()
  thrownException()Ljava/lang/Throwable; = ThrownException()
  trace()Ljava/lang/String; = Trace()
junit/framework/TestListener = Junit.Framework.ITestListener
  addError(Ljunit/framework/Test;Ljava/lang/Throwable;)V = AddError(Junit.Framework.ITest, Java.Lang.Throwable)
  addFailure(Ljunit/framework/Test;Ljunit/framework/AssertionFailedError;)V = AddFailure(Junit.Framework.ITest, Junit.Framework.AssertionFailedError)
  endTest(Ljunit/framework/Test;)V = EndTest(Junit.Framework.ITest)
  startTest(Ljunit/framework/Test;)V = StartTest(Junit.Framework.ITest)
junit/framework/TestResult = Junit.Framework.TestResult
  <init>()V = .ctor()
  fErrors = FErrors
  fFailures = FFailures
  fListeners = FListeners
  fRunTests = FRunTests
  addError(Ljunit/framework/Test;Ljava/lang/Throwable;)V = AddError(Junit.Framework.ITest, Java.Lang.Throwable)
  addFailure(Ljunit/framework/Test;Ljunit/framework/AssertionFailedError;)V = AddFailure(Junit.Framework.ITest, Junit.Framework.AssertionFailedError)
  addListener(Ljunit/framework/TestListener;)V = AddListener(Junit.Framework.ITestListener)
  endTest(Ljunit/framework/Test;)V = EndTest(Junit.Framework.ITest)
  errorCount()I = ErrorCount()
  errors()Ljava/util/Enumeration; = Errors()
  failureCount()I = FailureCount()
  failures()Ljava/util/Enumeration; = Failures()
  removeListener(Ljunit/framework/TestListener;)V = RemoveListener(Junit.Framework.ITestListener)
  run(Ljunit/framework/TestCase;)V = Run(Junit.Framework.TestCase)
  runCount()I = RunCount()
  runProtected(Ljunit/framework/Test;Ljunit/framework/Protectable;)V = RunProtected(Junit.Framework.ITest, Junit.Framework.IProtectable)
  shouldStop()Z = ShouldStop()
  startTest(Ljunit/framework/Test;)V = StartTest(Junit.Framework.ITest)
  stop()V = Stop()
  wasSuccessful()Z = WasSuccessful()
junit/framework/TestSuite = Junit.Framework.TestSuite
  <init>()V = .ctor()
  <init>([Ljava/lang/Class;)V = .ctor(params Java.Lang.Class[])
  <init>([Ljava/lang/Class;Ljava/lang/String;)V = .ctor(Java.Lang.Class[], string)
  <init>(Ljava/lang/Class;)V = .ctor(Java.Lang.Class)
  <init>(Ljava/lang/Class;Ljava/lang/String;)V = .ctor(Java.Lang.Class, string)
  <init>(Ljava/lang/String;)V = .ctor(string)
  getName()Ljava/lang/String; = Name
  setName(Ljava/lang/String;)V = Name
  addTest(Ljunit/framework/Test;)V = AddTest(Junit.Framework.ITest)
  addTestSuite(Ljava/lang/Class;)V = AddTestSuite(Java.Lang.Class)
  countTestCases()I = CountTestCases()
  createTest(Ljava/lang/Class;Ljava/lang/String;)Ljunit/framework/Test; = CreateTest(Java.Lang.Class, string)
  getTestConstructor(Ljava/lang/Class;)Ljava/lang/reflect/Constructor; = GetTestConstructor(Java.Lang.Class)
  run(Ljunit/framework/TestResult;)V = Run(Junit.Framework.TestResult)
  runTest(Ljunit/framework/Test;Ljunit/framework/TestResult;)V = RunTest(Junit.Framework.ITest, Junit.Framework.TestResult)
  testAt(I)Ljunit/framework/Test; = TestAt(int)
  testCount()I = TestCount()
  tests()Ljava/util/Enumeration; = Tests()
  warning(Ljava/lang/String;)Ljunit/framework/Test; = Warning(string)
junit/runner/BaseTestRunner = Junit.Runner.BaseTestRunner
  <init>()V = .ctor()
  SUITE_METHODNAME = SuiteMethodname
  getPreferences()Ljava/util/Properties; = Preferences
  setPreferences(Ljava/util/Properties;)V = Preferences
  addError(Ljunit/framework/Test;Ljava/lang/Throwable;)V = AddError(Junit.Framework.ITest, Java.Lang.Throwable)
  addFailure(Ljunit/framework/Test;Ljunit/framework/AssertionFailedError;)V = AddFailure(Junit.Framework.ITest, Junit.Framework.AssertionFailedError)
  clearStatus()V = ClearStatus()
  elapsedTimeAsString(J)Ljava/lang/String; = ElapsedTimeAsString(long)
  endTest(Ljunit/framework/Test;)V = EndTest(Junit.Framework.ITest)
  extractClassName(Ljava/lang/String;)Ljava/lang/String; = ExtractClassName(string)
  getFilteredTrace(Ljava/lang/String;)Ljava/lang/String; = GetFilteredTrace(string)
  getFilteredTrace(Ljava/lang/Throwable;)Ljava/lang/String; = GetFilteredTrace(Java.Lang.Throwable)
  getPreference(Ljava/lang/String;)Ljava/lang/String; = GetPreference(string)
  getPreference(Ljava/lang/String;I)I = GetPreference(string, int)
  getTest(Ljava/lang/String;)Ljunit/framework/Test; = GetTest(string)
  loadSuiteClass(Ljava/lang/String;)Ljava/lang/Class; = LoadSuiteClass(string)
  processArguments([Ljava/lang/String;)Ljava/lang/String; = ProcessArguments(string[])
  runFailed(Ljava/lang/String;)V = RunFailed(string)
  savePreferences()V = SavePreferences()
  setLoading(Z)V = SetLoading(bool)
  setPreference(Ljava/lang/String;Ljava/lang/String;)V = SetPreference(string, string)
  showStackRaw()Z = ShowStackRaw()
  startTest(Ljunit/framework/Test;)V = StartTest(Junit.Framework.ITest)
  testEnded(Ljava/lang/String;)V = TestEnded(string)
  testFailed(ILjunit/framework/Test;Ljava/lang/Throwable;)V = TestFailed(int, Junit.Framework.ITest, Java.Lang.Throwable)
  testStarted(Ljava/lang/String;)V = TestStarted(string)
  truncate(Ljava/lang/String;)Ljava/lang/String; = Truncate(string)
  useReloadingTestSuiteLoader()Z = UseReloadingTestSuiteLoader()
junit/runner/TestRunListener = Junit.Runner.ITestRunListener
  STATUS_ERROR = StatusError
  STATUS_FAILURE = StatusFailure
  testEnded(Ljava/lang/String;)V = TestEnded(string)
  testFailed(ILjava/lang/String;Ljava/lang/String;)V = TestFailed(int, string, string)
  testRunEnded(J)V = TestRunEnded(long)
  testRunStarted(Ljava/lang/String;I)V = TestRunStarted(string, int)
  testRunStopped(J)V = TestRunStopped(long)
  testStarted(Ljava/lang/String;)V = TestStarted(string)
junit/runner/Version = Junit.Runner.Version
  id()Ljava/lang/String; = Id()
  main([Ljava/lang/String;)V = Main(string[])
junit/textui/ResultPrinter = Junit.Textui.ResultPrinter
  <init>(Ljava/io/PrintStream;)V = .ctor(Java.IO.PrintStream)
  getWriter()Ljava/io/PrintStream; = Writer
  addError(Ljunit/framework/Test;Ljava/lang/Throwable;)V = AddError(Junit.Framework.ITest, Java.Lang.Throwable)
  addFailure(Ljunit/framework/Test;Ljunit/framework/AssertionFailedError;)V = AddFailure(Junit.Framework.ITest, Junit.Framework.AssertionFailedError)
  elapsedTimeAsString(J)Ljava/lang/String; = ElapsedTimeAsString(long)
  endTest(Ljunit/framework/Test;)V = EndTest(Junit.Framework.ITest)
  printDefect(Ljunit/framework/TestFailure;I)V = PrintDefect(Junit.Framework.TestFailure, int)
  printDefectHeader(Ljunit/framework/TestFailure;I)V = PrintDefectHeader(Junit.Framework.TestFailure, int)
  printDefects(Ljava/util/Enumeration;ILjava/lang/String;)V = PrintDefects(Java.Util.IEnumeration, int, string)
  printDefectTrace(Ljunit/framework/TestFailure;)V = PrintDefectTrace(Junit.Framework.TestFailure)
  printErrors(Ljunit/framework/TestResult;)V = PrintErrors(Junit.Framework.TestResult)
  printFailures(Ljunit/framework/TestResult;)V = PrintFailures(Junit.Framework.TestResult)
  printFooter(Ljunit/framework/TestResult;)V = PrintFooter(Junit.Framework.TestResult)
  printHeader(J)V = PrintHeader(long)
  startTest(Ljunit/framework/Test;)V = StartTest(Junit.Framework.ITest)
junit/textui/TestRunner = Junit.Textui.TestRunner
  <init>()V = .ctor()
  <init>(Ljava/io/PrintStream;)V = .ctor(Java.IO.PrintStream)
  <init>(Ljunit/textui/ResultPrinter;)V = .ctor(Junit.Textui.ResultPrinter)
  EXCEPTION_EXIT = ExceptionExit
  FAILURE_EXIT = FailureExit
  SUCCESS_EXIT = SuccessExit
  createTestResult()Ljunit/framework/TestResult; = CreateTestResult()
  doRun(Ljunit/framework/Test;)Ljunit/framework/TestResult; = DoRun(Junit.Framework.ITest)
  doRun(Ljunit/framework/Test;Z)Ljunit/framework/TestResult; = DoRun(Junit.Framework.ITest, bool)
  main([Ljava/lang/String;)V = Main(string[])
  pause(Z)V = Pause(bool)
  run(Ljava/lang/Class;)V = Run(Java.Lang.Class)
  run(Ljunit/framework/Test;)Ljunit/framework/TestResult; = Run(Junit.Framework.ITest)
  runAndWait(Ljunit/framework/Test;)V = RunAndWait(Junit.Framework.ITest)
  runFailed(Ljava/lang/String;)V = RunFailed(string)
  runSingleMethod(Ljava/lang/String;Ljava/lang/String;Z)Ljunit/framework/TestResult; = RunSingleMethod(string, string, bool)
  setPrinter(Ljunit/textui/ResultPrinter;)V = SetPrinter(Junit.Textui.ResultPrinter)
  start([Ljava/lang/String;)Ljunit/framework/TestResult; = Start(string[])
  testEnded(Ljava/lang/String;)V = TestEnded(string)
  testFailed(ILjunit/framework/Test;Ljava/lang/Throwable;)V = TestFailed(int, Junit.Framework.ITest, Java.Lang.Throwable)
  testStarted(Ljava/lang/String;)V = TestStarted(string)
org/checkerframework/checker/compilermsgs/qual/CompilerMessageKey = Org.Checkerframework.Checker.Compilermsgs.Qual.ICompilerMessageKey
org/checkerframework/checker/compilermsgs/qual/CompilerMessageKeyBottom = Org.Checkerframework.Checker.Compilermsgs.Qual.ICompilerMessageKeyBottom
org/checkerframework/checker/compilermsgs/qual/UnknownCompilerMessageKey = Org.Checkerframework.Checker.Compilermsgs.Qual.IUnknownCompilerMessageKey
org/checkerframework/checker/fenum/qual/AwtAlphaCompositingRule = Org.Checkerframework.Checker.Fenum.Qual.IAwtAlphaCompositingRule
org/checkerframework/checker/fenum/qual/AwtColorSpace = Org.Checkerframework.Checker.Fenum.Qual.IAwtColorSpace
org/checkerframework/checker/fenum/qual/AwtCursorType = Org.Checkerframework.Checker.Fenum.Qual.IAwtCursorType
org/checkerframework/checker/fenum/qual/AwtFlowLayout = Org.Checkerframework.Checker.Fenum.Qual.IAwtFlowLayout
org/checkerframework/checker/fenum/qual/Fenum = Org.Checkerframework.Checker.Fenum.Qual.IFenum
  value()Ljava/lang/String; = Value()
org/checkerframework/checker/fenum/qual/FenumBottom = Org.Checkerframework.Checker.Fenum.Qual.IFenumBottom
org/checkerframework/checker/fenum/qual/FenumTop = Org.Checkerframework.Checker.Fenum.Qual.IFenumTop
org/checkerframework/checker/fenum/qual/FenumUnqualified = Org.Checkerframework.Checker.Fenum.Qual.IFenumUnqualified
org/checkerframework/checker/fenum/qual/PolyFenum = Org.Checkerframework.Checker.Fenum.Qual.IPolyFenum
org/checkerframework/checker/fenum/qual/SwingBoxOrientation = Org.Checkerframework.Checker.Fenum.Qual.ISwingBoxOrientation
org/checkerframework/checker/fenum/qual/SwingCompassDirection = Org.Checkerframework.Checker.Fenum.Qual.ISwingCompassDirection
org/checkerframework/checker/fenum/qual/SwingElementOrientation = Org.Checkerframework.Checker.Fenum.Qual.ISwingElementOrientation
org/checkerframework/checker/fenum/qual/SwingHorizontalOrientation = Org.Checkerframework.Checker.Fenum.Qual.ISwingHorizontalOrientation
org/checkerframework/checker/fenum/qual/SwingSplitPaneOrientation = Org.Checkerframework.Checker.Fenum.Qual.ISwingSplitPaneOrientation
org/checkerframework/checker/fenum/qual/SwingTextOrientation = Org.Checkerframework.Checker.Fenum.Qual.ISwingTextOrientation
org/checkerframework/checker/fenum/qual/SwingTitleJustification = Org.Checkerframework.Checker.Fenum.Qual.ISwingTitleJustification
org/checkerframework/checker/fenum/qual/SwingTitlePosition = Org.Checkerframework.Checker.Fenum.Qual.ISwingTitlePosition
org/checkerframework/checker/fenum/qual/SwingVerticalOrientation = Org.Checkerframework.Checker.Fenum.Qual.ISwingVerticalOrientation
org/checkerframework/checker/formatter/FormatUtil = Org.Checkerframework.Checker.Formatter.FormatUtil
  <init>()V = .ctor()
  asFormat(Ljava/lang/String;[Lorg/checkerframework/checker/formatter/qual/ConversionCategory;)Ljava/lang/String; = AsFormat(string, params Org.Checkerframework.Checker.Formatter.Qual.ConversionCategory[])
  formatParameterCategories(Ljava/lang/String;)[Lorg/checkerframework/checker/formatter/qual/ConversionCategory; = FormatParameterCategories(string)
  tryFormatSatisfiability(Ljava/lang/String;)V = TryFormatSatisfiability(string)
org/checkerframework/checker/formatter/qual/ConversionCategory = Org.Checkerframework.Checker.Formatter.Qual.ConversionCategory
  CHAR = Char
  CHAR_AND_INT = CharAndInt
  chars = Chars
  FLOAT = Float
  GENERAL = General
  INT = Int
  INT_AND_TIME = IntAndTime
  NULL = Null
  TIME = Time
  types = Types
  UNUSED = Unused
  fromConversionChar(C)Lorg/checkerframework/checker/formatter/qual/ConversionCategory; = FromConversionChar(char)
  intersect(Lorg/checkerframework/checker/formatter/qual/ConversionCategory;Lorg/checkerframework/checker/formatter/qual/ConversionCategory;)Lorg/checkerframework/checker/formatter/qual/ConversionCategory; = Intersect(Org.Checkerframework.Checker.Formatter.Qual.ConversionCategory, Org.Checkerframework.Checker.Formatter.Qual.ConversionCategory)
  isSubsetOf(Lorg/checkerframework/checker/formatter/qual/ConversionCategory;Lorg/checkerframework/checker/formatter/qual/ConversionCategory;)Z = IsSubsetOf(Org.Checkerframework.Checker.Formatter.Qual.ConversionCategory, Org.Checkerframework.Checker.Formatter.Qual.ConversionCategory)
  union(Lorg/checkerframework/checker/formatter/qual/ConversionCategory;Lorg/checkerframework/checker/formatter/qual/ConversionCategory;)Lorg/checkerframework/checker/formatter/qual/ConversionCategory; = Union(Org.Checkerframework.Checker.Formatter.Qual.ConversionCategory, Org.Checkerframework.Checker.Formatter.Qual.ConversionCategory)
  valueOf(Ljava/lang/String;)Lorg/checkerframework/checker/formatter/qual/ConversionCategory; = ValueOf(string)
  values()[Lorg/checkerframework/checker/formatter/qual/ConversionCategory; = Values()
org/checkerframework/checker/formatter/qual/Format = Org.Checkerframework.Checker.Formatter.Qual.IFormat
  value()[Lorg/checkerframework/checker/formatter/qual/ConversionCategory; = Value()
org/checkerframework/checker/formatter/qual/FormatBottom = Org.Checkerframework.Checker.Formatter.Qual.IFormatBottom
org/checkerframework/checker/formatter/qual/FormatMethod = Org.Checkerframework.Checker.Formatter.Qual.IFormatMethod
org/checkerframework/checker/formatter/qual/InvalidFormat = Org.Checkerframework.Checker.Formatter.Qual.IInvalidFormat
  value()Ljava/lang/String; = Value()
org/checkerframework/checker/formatter/qual/ReturnsFormat = Org.Checkerframework.Checker.Formatter.Qual.IReturnsFormat
org/checkerframework/checker/formatter/qual/UnknownFormat = Org.Checkerframework.Checker.Formatter.Qual.IUnknownFormat
org/checkerframework/checker/guieffect/qual/AlwaysSafe = Org.Checkerframework.Checker.Guieffect.Qual.IAlwaysSafe
org/checkerframework/checker/guieffect/qual/PolyUI = Org.Checkerframework.Checker.Guieffect.Qual.IPolyUI
org/checkerframework/checker/guieffect/qual/PolyUIEffect = Org.Checkerframework.Checker.Guieffect.Qual.IPolyUIEffect
org/checkerframework/checker/guieffect/qual/PolyUIType = Org.Checkerframework.Checker.Guieffect.Qual.IPolyUIType
org/checkerframework/checker/guieffect/qual/SafeEffect = Org.Checkerframework.Checker.Guieffect.Qual.ISafeEffect
org/checkerframework/checker/guieffect/qual/SafeType = Org.Checkerframework.Checker.Guieffect.Qual.ISafeType
org/checkerframework/checker/guieffect/qual/UI = Org.Checkerframework.Checker.Guieffect.Qual.IUI
org/checkerframework/checker/guieffect/qual/UIEffect = Org.Checkerframework.Checker.Guieffect.Qual.IUIEffect
org/checkerframework/checker/guieffect/qual/UIPackage = Org.Checkerframework.Checker.Guieffect.Qual.IUIPackage
org/checkerframework/checker/guieffect/qual/UIType = Org.Checkerframework.Checker.Guieffect.Qual.IUIType
org/checkerframework/checker/i18n/qual/LocalizableKey = Org.Checkerframework.Checker.I18n.Qual.ILocalizableKey
org/checkerframework/checker/i18n/qual/LocalizableKeyBottom = Org.Checkerframework.Checker.I18n.Qual.ILocalizableKeyBottom
org/checkerframework/checker/i18n/qual/Localized = Org.Checkerframework.Checker.I18n.Qual.ILocalized
org/checkerframework/checker/i18n/qual/UnknownLocalizableKey = Org.Checkerframework.Checker.I18n.Qual.IUnknownLocalizableKey
org/checkerframework/checker/i18n/qual/UnknownLocalized = Org.Checkerframework.Checker.I18n.Qual.IUnknownLocalized
org/checkerframework/checker/i18nformatter/I18nFormatUtil = Org.Checkerframework.Checker.I18nformatter.I18nFormatUtil
  <init>()V = .ctor()
  formatParameterCategories(Ljava/lang/String;)[Lorg/checkerframework/checker/i18nformatter/qual/I18nConversionCategory; = FormatParameterCategories(string)
  hasFormat(Ljava/lang/String;[Lorg/checkerframework/checker/i18nformatter/qual/I18nConversionCategory;)Z = HasFormat(string, params Org.Checkerframework.Checker.I18nformatter.Qual.I18nConversionCategory[])
  isFormat(Ljava/lang/String;)Z = IsFormat(string)
  tryFormatSatisfiability(Ljava/lang/String;)V = TryFormatSatisfiability(string)
org/checkerframework/checker/i18nformatter/qual/I18nChecksFormat = Org.Checkerframework.Checker.I18nformatter.Qual.II18nChecksFormat
org/checkerframework/checker/i18nformatter/qual/I18nConversionCategory = Org.Checkerframework.Checker.I18nformatter.Qual.I18nConversionCategory
  DATE = Date
  GENERAL = General
  NUMBER = Number
  strings = Strings
  types = Types
  UNUSED = Unused
  intersect(Lorg/checkerframework/checker/i18nformatter/qual/I18nConversionCategory;Lorg/checkerframework/checker/i18nformatter/qual/I18nConversionCategory;)Lorg/checkerframework/checker/i18nformatter/qual/I18nConversionCategory; = Intersect(Org.Checkerframework.Checker.I18nformatter.Qual.I18nConversionCategory, Org.Checkerframework.Checker.I18nformatter.Qual.I18nConversionCategory)
  isSubsetOf(Lorg/checkerframework/checker/i18nformatter/qual/I18nConversionCategory;Lorg/checkerframework/checker/i18nformatter/qual/I18nConversionCategory;)Z = IsSubsetOf(Org.Checkerframework.Checker.I18nformatter.Qual.I18nConversionCategory, Org.Checkerframework.Checker.I18nformatter.Qual.I18nConversionCategory)
  stringToI18nConversionCategory(Ljava/lang/String;)Lorg/checkerframework/checker/i18nformatter/qual/I18nConversionCategory; = StringToI18nConversionCategory(string)
  union(Lorg/checkerframework/checker/i18nformatter/qual/I18nConversionCategory;Lorg/checkerframework/checker/i18nformatter/qual/I18nConversionCategory;)Lorg/checkerframework/checker/i18nformatter/qual/I18nConversionCategory; = Union(Org.Checkerframework.Checker.I18nformatter.Qual.I18nConversionCategory, Org.Checkerframework.Checker.I18nformatter.Qual.I18nConversionCategory)
  valueOf(Ljava/lang/String;)Lorg/checkerframework/checker/i18nformatter/qual/I18nConversionCategory; = ValueOf(string)
  values()[Lorg/checkerframework/checker/i18nformatter/qual/I18nConversionCategory; = Values()
org/checkerframework/checker/i18nformatter/qual/I18nFormat = Org.Checkerframework.Checker.I18nformatter.Qual.II18nFormat
  value()[Lorg/checkerframework/checker/i18nformatter/qual/I18nConversionCategory; = Value()
org/checkerframework/checker/i18nformatter/qual/I18nFormatBottom = Org.Checkerframework.Checker.I18nformatter.Qual.II18nFormatBottom
org/checkerframework/checker/i18nformatter/qual/I18nFormatFor = Org.Checkerframework.Checker.I18nformatter.Qual.II18nFormatFor
  value()Ljava/lang/String; = Value()
org/checkerframework/checker/i18nformatter/qual/I18nInvalidFormat = Org.Checkerframework.Checker.I18nformatter.Qual.II18nInvalidFormat
  value()Ljava/lang/String; = Value()
org/checkerframework/checker/i18nformatter/qual/I18nMakeFormat = Org.Checkerframework.Checker.I18nformatter.Qual.II18nMakeFormat
org/checkerframework/checker/i18nformatter/qual/I18nUnknownFormat = Org.Checkerframework.Checker.I18nformatter.Qual.II18nUnknownFormat
org/checkerframework/checker/i18nformatter/qual/I18nValidFormat = Org.Checkerframework.Checker.I18nformatter.Qual.II18nValidFormat
org/checkerframework/checker/index/qual/EnsuresLTLengthOf = Org.Checkerframework.Checker.Index.Qual.IEnsuresLTLengthOf
  offset()[Ljava/lang/String; = Offset()
  targetValue()[Ljava/lang/String; = TargetValue()
  value()[Ljava/lang/String; = Value()
org/checkerframework/checker/index/qual/EnsuresLTLengthOfIf = Org.Checkerframework.Checker.Index.Qual.IEnsuresLTLengthOfIf
  expression()[Ljava/lang/String; = Expression()
  offset()[Ljava/lang/String; = Offset()
  result()Z = Result()
  targetValue()[Ljava/lang/String; = TargetValue()
org/checkerframework/checker/index/qual/GTENegativeOne = Org.Checkerframework.Checker.Index.Qual.IGTENegativeOne
org/checkerframework/checker/index/qual/HasSubsequence = Org.Checkerframework.Checker.Index.Qual.IHasSubsequence
  from()Ljava/lang/String; = From()
  subsequence()Ljava/lang/String; = Subsequence()
  to()Ljava/lang/String; = To()
org/checkerframework/checker/index/qual/IndexFor = Org.Checkerframework.Checker.Index.Qual.IIndexFor
  value()[Ljava/lang/String; = Value()
org/checkerframework/checker/index/qual/IndexOrHigh = Org.Checkerframework.Checker.Index.Qual.IIndexOrHigh
  value()[Ljava/lang/String; = Value()
org/checkerframework/checker/index/qual/IndexOrLow = Org.Checkerframework.Checker.Index.Qual.IIndexOrLow
  value()[Ljava/lang/String; = Value()
org/checkerframework/checker/index/qual/LengthOf = Org.Checkerframework.Checker.Index.Qual.ILengthOf
  value()[Ljava/lang/String; = Value()
org/checkerframework/checker/index/qual/LessThan = Org.Checkerframework.Checker.Index.Qual.ILessThan
  value()[Ljava/lang/String; = Value()
org/checkerframework/checker/index/qual/LessThanBottom = Org.Checkerframework.Checker.Index.Qual.ILessThanBottom
org/checkerframework/checker/index/qual/LessThanUnknown = Org.Checkerframework.Checker.Index.Qual.ILessThanUnknown
org/checkerframework/checker/index/qual/LowerBoundBottom = Org.Checkerframework.Checker.Index.Qual.ILowerBoundBottom
org/checkerframework/checker/index/qual/LowerBoundUnknown = Org.Checkerframework.Checker.Index.Qual.ILowerBoundUnknown
org/checkerframework/checker/index/qual/LTEqLengthOf = Org.Checkerframework.Checker.Index.Qual.ILTEqLengthOf
  value()[Ljava/lang/String; = Value()
org/checkerframework/checker/index/qual/LTLengthOf = Org.Checkerframework.Checker.Index.Qual.ILTLengthOf
  offset()[Ljava/lang/String; = Offset()
  value()[Ljava/lang/String; = Value()
org/checkerframework/checker/index/qual/LTOMLengthOf = Org.Checkerframework.Checker.Index.Qual.ILTOMLengthOf
  value()[Ljava/lang/String; = Value()
org/checkerframework/checker/index/qual/NegativeIndexFor = Org.Checkerframework.Checker.Index.Qual.INegativeIndexFor
  value()[Ljava/lang/String; = Value()
org/checkerframework/checker/index/qual/NonNegative = Org.Checkerframework.Checker.Index.Qual.INonNegative
org/checkerframework/checker/index/qual/PolyIndex = Org.Checkerframework.Checker.Index.Qual.IPolyIndex
org/checkerframework/checker/index/qual/PolyLength = Org.Checkerframework.Checker.Index.Qual.IPolyLength
org/checkerframework/checker/index/qual/PolyLowerBound = Org.Checkerframework.Checker.Index.Qual.IPolyLowerBound
org/checkerframework/checker/index/qual/PolySameLen = Org.Checkerframework.Checker.Index.Qual.IPolySameLen
org/checkerframework/checker/index/qual/PolyUpperBound = Org.Checkerframework.Checker.Index.Qual.IPolyUpperBound
org/checkerframework/checker/index/qual/Positive = Org.Checkerframework.Checker.Index.Qual.IPositive
org/checkerframework/checker/index/qual/SameLen = Org.Checkerframework.Checker.Index.Qual.ISameLen
  value()[Ljava/lang/String; = Value()
org/checkerframework/checker/index/qual/SameLenBottom = Org.Checkerframework.Checker.Index.Qual.ISameLenBottom
org/checkerframework/checker/index/qual/SameLenUnknown = Org.Checkerframework.Checker.Index.Qual.ISameLenUnknown
org/checkerframework/checker/index/qual/SearchIndexBottom = Org.Checkerframework.Checker.Index.Qual.ISearchIndexBottom
org/checkerframework/checker/index/qual/SearchIndexFor = Org.Checkerframework.Checker.Index.Qual.ISearchIndexFor
  value()[Ljava/lang/String; = Value()
org/checkerframework/checker/index/qual/SearchIndexUnknown = Org.Checkerframework.Checker.Index.Qual.ISearchIndexUnknown
org/checkerframework/checker/index/qual/SubstringIndexBottom = Org.Checkerframework.Checker.Index.Qual.ISubstringIndexBottom
org/checkerframework/checker/index/qual/SubstringIndexFor = Org.Checkerframework.Checker.Index.Qual.ISubstringIndexFor
  offset()[Ljava/lang/String; = Offset()
  value()[Ljava/lang/String; = Value()
org/checkerframework/checker/index/qual/SubstringIndexUnknown = Org.Checkerframework.Checker.Index.Qual.ISubstringIndexUnknown
org/checkerframework/checker/index/qual/UpperBoundBottom = Org.Checkerframework.Checker.Index.Qual.IUpperBoundBottom
org/checkerframework/checker/index/qual/UpperBoundUnknown = Org.Checkerframework.Checker.Index.Qual.IUpperBoundUnknown
org/checkerframework/checker/initialization/qual/FBCBottom = Org.Checkerframework.Checker.Initialization.Qual.IFBCBottom
org/checkerframework/checker/initialization/qual/Initialized = Org.Checkerframework.Checker.Initialization.Qual.IInitialized
org/checkerframework/checker/initialization/qual/NotOnlyInitialized = Org.Checkerframework.Checker.Initialization.Qual.INotOnlyInitialized
org/checkerframework/checker/initialization/qual/UnderInitialization = Org.Checkerframework.Checker.Initialization.Qual.IUnderInitialization
  value()Ljava/lang/Class; = Value()
org/checkerframework/checker/initialization/qual/UnknownInitialization = Org.Checkerframework.Checker.Initialization.Qual.IUnknownInitialization
  value()Ljava/lang/Class; = Value()
org/checkerframework/checker/interning/qual/Interned = Org.Checkerframework.Checker.Interning.Qual.IInterned
org/checkerframework/checker/interning/qual/InternedDistinct = Org.Checkerframework.Checker.Interning.Qual.IInternedDistinct
org/checkerframework/checker/interning/qual/PolyInterned = Org.Checkerframework.Checker.Interning.Qual.IPolyInterned
org/checkerframework/checker/interning/qual/UnknownInterned = Org.Checkerframework.Checker.Interning.Qual.IUnknownInterned
org/checkerframework/checker/interning/qual/UsesObjectEquals = Org.Checkerframework.Checker.Interning.Qual.IUsesObjectEquals
org/checkerframework/checker/lock/qual/EnsuresLockHeld = Org.Checkerframework.Checker.Lock.Qual.IEnsuresLockHeld
  value()[Ljava/lang/String; = Value()
org/checkerframework/checker/lock/qual/EnsuresLockHeldIf = Org.Checkerframework.Checker.Lock.Qual.IEnsuresLockHeldIf
  expression()[Ljava/lang/String; = Expression()
  result()Z = Result()
org/checkerframework/checker/lock/qual/GuardedBy = Org.Checkerframework.Checker.Lock.Qual.IGuardedBy
  value()[Ljava/lang/String; = Value()
org/checkerframework/checker/lock/qual/GuardedByBottom = Org.Checkerframework.Checker.Lock.Qual.IGuardedByBottom
org/checkerframework/checker/lock/qual/GuardedByUnknown = Org.Checkerframework.Checker.Lock.Qual.IGuardedByUnknown
org/checkerframework/checker/lock/qual/GuardSatisfied = Org.Checkerframework.Checker.Lock.Qual.IGuardSatisfied
  value()I = Value()
org/checkerframework/checker/lock/qual/Holding = Org.Checkerframework.Checker.Lock.Qual.IHolding
  value()[Ljava/lang/String; = Value()
org/checkerframework/checker/lock/qual/LockHeld = Org.Checkerframework.Checker.Lock.Qual.ILockHeld
org/checkerframework/checker/lock/qual/LockingFree = Org.Checkerframework.Checker.Lock.Qual.ILockingFree
org/checkerframework/checker/lock/qual/LockPossiblyHeld = Org.Checkerframework.Checker.Lock.Qual.ILockPossiblyHeld
org/checkerframework/checker/lock/qual/MayReleaseLocks = Org.Checkerframework.Checker.Lock.Qual.IMayReleaseLocks
org/checkerframework/checker/lock/qual/ReleasesNoLocks = Org.Checkerframework.Checker.Lock.Qual.IReleasesNoLocks
org/checkerframework/checker/nullness/NullnessUtil = Org.Checkerframework.Checker.Nullness.NullnessUtil
  castNonNull(Ljava/lang/Object;)Ljava/lang/Object; = CastNonNull(Java.Lang.Object)
  castNonNullDeep([Ljava/lang/Object;)[Ljava/lang/Object; = CastNonNullDeep(Java.Lang.Object[])
  castNonNullDeep([[Ljava/lang/Object;)[[Ljava/lang/Object; = CastNonNullDeep(Java.Lang.Object[][])
  castNonNullDeep([[[Ljava/lang/Object;)[[[Ljava/lang/Object; = CastNonNullDeep(Java.Lang.Object[][][])
  castNonNullDeep([[[[Ljava/lang/Object;)[[[[Ljava/lang/Object; = CastNonNullDeep(Java.Lang.Object[][][][])
  castNonNullDeep([[[[[Ljava/lang/Object;)[[[[[Ljava/lang/Object; = CastNonNullDeep(Java.Lang.Object[][][][][])
org/checkerframework/checker/nullness/Opt = Org.Checkerframework.Checker.Nullness.Opt
  filter(Ljava/lang/Object;Ljava/util/function/Predicate;)Ljava/lang/Object; = Filter(Java.Lang.Object, Java.Util.Functions.IPredicate)
  get(Ljava/lang/Object;)Ljava/lang/Object; = Get(Java.Lang.Object)
  ifPresent(Ljava/lang/Object;Ljava/util/function/Consumer;)V = IfPresent(Java.Lang.Object, Java.Util.Functions.IConsumer)
  isPresent(Ljava/lang/Object;)Z = IsPresent(Java.Lang.Object)
  map(Ljava/lang/Object;Ljava/util/function/Function;)Ljava/lang/Object; = Map(Java.Lang.Object, Java.Util.Functions.IFunction)
  orElse(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object; = OrElse(Java.Lang.Object, Java.Lang.Object)
  orElseGet(Ljava/lang/Object;Ljava/util/function/Supplier;)Ljava/lang/Object; = OrElseGet(Java.Lang.Object, Java.Util.Functions.ISupplier)
  orElseThrow(Ljava/lang/Object;Ljava/util/function/Supplier;)Ljava/lang/Object; = OrElseThrow(Java.Lang.Object, Java.Util.Functions.ISupplier)
org/checkerframework/checker/nullness/qual/AssertNonNullIfNonNull = Org.Checkerframework.Checker.Nullness.Qual.IAssertNonNullIfNonNull
  value()[Ljava/lang/String; = Value()
org/checkerframework/checker/nullness/qual/EnsuresKeyFor = Org.Checkerframework.Checker.Nullness.Qual.IEnsuresKeyFor
  map()[Ljava/lang/String; = Map()
  value()[Ljava/lang/String; = Value()
org/checkerframework/checker/nullness/qual/EnsuresKeyForIf = Org.Checkerframework.Checker.Nullness.Qual.IEnsuresKeyForIf
  expression()[Ljava/lang/String; = Expression()
  map()[Ljava/lang/String; = Map()
  result()Z = Result()
org/checkerframework/checker/nullness/qual/EnsuresNonNull = Org.Checkerframework.Checker.Nullness.Qual.IEnsuresNonNull
  value()[Ljava/lang/String; = Value()
org/checkerframework/checker/nullness/qual/EnsuresNonNullIf = Org.Checkerframework.Checker.Nullness.Qual.IEnsuresNonNullIf
  expression()[Ljava/lang/String; = Expression()
  result()Z = Result()
org/checkerframework/checker/nullness/qual/KeyFor = Org.Checkerframework.Checker.Nullness.Qual.IKeyFor
  value()[Ljava/lang/String; = Value()
org/checkerframework/checker/nullness/qual/KeyForBottom = Org.Checkerframework.Checker.Nullness.Qual.IKeyForBottom
org/checkerframework/checker/nullness/qual/MonotonicNonNull = Org.Checkerframework.Checker.Nullness.Qual.IMonotonicNonNull
org/checkerframework/checker/nullness/qual/NonNull = Org.Checkerframework.Checker.Nullness.Qual.INonNull
org/checkerframework/checker/nullness/qual/NonRaw = Org.Checkerframework.Checker.Nullness.Qual.INonRaw
org/checkerframework/checker/nullness/qual/Nullable = Org.Checkerframework.Checker.Nullness.Qual.INullable
org/checkerframework/checker/nullness/qual/PolyKeyFor = Org.Checkerframework.Checker.Nullness.Qual.IPolyKeyFor
org/checkerframework/checker/nullness/qual/PolyNull = Org.Checkerframework.Checker.Nullness.Qual.IPolyNull
org/checkerframework/checker/nullness/qual/PolyRaw = Org.Checkerframework.Checker.Nullness.Qual.IPolyRaw
org/checkerframework/checker/nullness/qual/Raw = Org.Checkerframework.Checker.Nullness.Qual.IRaw
  value()Ljava/lang/Class; = Value()
org/checkerframework/checker/nullness/qual/RequiresNonNull = Org.Checkerframework.Checker.Nullness.Qual.IRequiresNonNull
  value()[Ljava/lang/String; = Value()
org/checkerframework/checker/nullness/qual/UnknownKeyFor = Org.Checkerframework.Checker.Nullness.Qual.IUnknownKeyFor
org/checkerframework/checker/optional/qual/MaybePresent = Org.Checkerframework.Checker.Optional.Qual.IMaybePresent
org/checkerframework/checker/optional/qual/PolyPresent = Org.Checkerframework.Checker.Optional.Qual.IPolyPresent
org/checkerframework/checker/optional/qual/Present = Org.Checkerframework.Checker.Optional.Qual.IPresent
org/checkerframework/checker/propkey/qual/PropertyKey = Org.Checkerframework.Checker.Propkey.Qual.IPropertyKey
org/checkerframework/checker/propkey/qual/PropertyKeyBottom = Org.Checkerframework.Checker.Propkey.Qual.IPropertyKeyBottom
org/checkerframework/checker/propkey/qual/UnknownPropertyKey = Org.Checkerframework.Checker.Propkey.Qual.IUnknownPropertyKey
org/checkerframework/checker/regex/qual/PartialRegex = Org.Checkerframework.Checker.Regex.Qual.IPartialRegex
  value()Ljava/lang/String; = Value()
org/checkerframework/checker/regex/qual/PolyRegex = Org.Checkerframework.Checker.Regex.Qual.IPolyRegex
org/checkerframework/checker/regex/qual/Regex = Org.Checkerframework.Checker.Regex.Qual.IRegex
  value()I = Value()
org/checkerframework/checker/regex/qual/RegexBottom = Org.Checkerframework.Checker.Regex.Qual.IRegexBottom
org/checkerframework/checker/regex/qual/UnknownRegex = Org.Checkerframework.Checker.Regex.Qual.IUnknownRegex
org/checkerframework/checker/regex/RegexUtil = Org.Checkerframework.Checker.Regex.RegexUtil
  asRegex(Ljava/lang/String;)Ljava/lang/String; = AsRegex(string)
  asRegex(Ljava/lang/String;I)Ljava/lang/String; = AsRegex(string, int)
  isRegex(C)Z = IsRegex(char)
  isRegex(Ljava/lang/String;)Z = IsRegex(string)
  isRegex(Ljava/lang/String;I)Z = IsRegex(string, int)
  regexError(Ljava/lang/String;)Ljava/lang/String; = RegexError(string)
  regexError(Ljava/lang/String;I)Ljava/lang/String; = RegexError(string, int)
  regexException(Ljava/lang/String;)Ljava/util/regex/PatternSyntaxException; = RegexException(string)
  regexException(Ljava/lang/String;I)Ljava/util/regex/PatternSyntaxException; = RegexException(string, int)
org/checkerframework/checker/signature/qual/BinaryName = Org.Checkerframework.Checker.Signature.Qual.IBinaryName
org/checkerframework/checker/signature/qual/BinaryNameInUnnamedPackage = Org.Checkerframework.Checker.Signature.Qual.IBinaryNameInUnnamedPackage
org/checkerframework/checker/signature/qual/ClassGetName = Org.Checkerframework.Checker.Signature.Qual.IClassGetName
org/checkerframework/checker/signature/qual/ClassGetSimpleName = Org.Checkerframework.Checker.Signature.Qual.IClassGetSimpleName
org/checkerframework/checker/signature/qual/DotSeparatedIdentifiers = Org.Checkerframework.Checker.Signature.Qual.IDotSeparatedIdentifiers
org/checkerframework/checker/signature/qual/FieldDescriptor = Org.Checkerframework.Checker.Signature.Qual.IFieldDescriptor
org/checkerframework/checker/signature/qual/FieldDescriptorForPrimitive = Org.Checkerframework.Checker.Signature.Qual.IFieldDescriptorForPrimitive
org/checkerframework/checker/signature/qual/FieldDescriptorForPrimitiveOrArrayInUnnamedPackage = Org.Checkerframework.Checker.Signature.Qual.IFieldDescriptorForPrimitiveOrArrayInUnnamedPackage
org/checkerframework/checker/signature/qual/FullyQualifiedName = Org.Checkerframework.Checker.Signature.Qual.IFullyQualifiedName
org/checkerframework/checker/signature/qual/Identifier = Org.Checkerframework.Checker.Signature.Qual.IIdentifier
org/checkerframework/checker/signature/qual/IdentifierOrArray = Org.Checkerframework.Checker.Signature.Qual.IIdentifierOrArray
org/checkerframework/checker/signature/qual/InternalForm = Org.Checkerframework.Checker.Signature.Qual.IInternalForm
org/checkerframework/checker/signature/qual/MethodDescriptor = Org.Checkerframework.Checker.Signature.Qual.IMethodDescriptor
org/checkerframework/checker/signature/qual/PolySignature = Org.Checkerframework.Checker.Signature.Qual.IPolySignature
org/checkerframework/checker/signature/qual/SignatureBottom = Org.Checkerframework.Checker.Signature.Qual.ISignatureBottom
org/checkerframework/checker/signature/qual/SignatureUnknown = Org.Checkerframework.Checker.Signature.Qual.ISignatureUnknown
org/checkerframework/checker/signedness/qual/Constant = Org.Checkerframework.Checker.Signedness.Qual.IConstant
org/checkerframework/checker/signedness/qual/PolySigned = Org.Checkerframework.Checker.Signedness.Qual.IPolySigned
org/checkerframework/checker/signedness/qual/Signed = Org.Checkerframework.Checker.Signedness.Qual.ISigned
org/checkerframework/checker/signedness/qual/SignednessBottom = Org.Checkerframework.Checker.Signedness.Qual.ISignednessBottom
org/checkerframework/checker/signedness/qual/UnknownSignedness = Org.Checkerframework.Checker.Signedness.Qual.IUnknownSignedness
org/checkerframework/checker/signedness/qual/Unsigned = Org.Checkerframework.Checker.Signedness.Qual.IUnsigned
org/checkerframework/checker/signedness/SignednessUtil = Org.Checkerframework.Checker.Signedness.SignednessUtil
  byteFromDouble(D)B = ByteFromDouble(double)
  byteFromFloat(F)B = ByteFromFloat(float)
  compareUnsigned(BB)I = CompareUnsigned(sbyte, sbyte)
  compareUnsigned(II)I = CompareUnsigned(int, int)
  compareUnsigned(JJ)I = CompareUnsigned(long, long)
  compareUnsigned(SS)I = CompareUnsigned(short, short)
  getUnsigned(Ljava/nio/ByteBuffer;)B = GetUnsigned(Java.Nio.ByteBuffer)
  getUnsigned(Ljava/nio/ByteBuffer;[B)V = GetUnsigned(Java.Nio.ByteBuffer, byte[])
  getUnsigned(Ljava/nio/ByteBuffer;[BII)Ljava/nio/ByteBuffer; = GetUnsigned(Java.Nio.ByteBuffer, byte[], int, int)
  getUnsigned(Ljava/nio/ByteBuffer;I)B = GetUnsigned(Java.Nio.ByteBuffer, int)
  getUnsigned(Ljava/nio/IntBuffer;I)I = GetUnsigned(Java.Nio.IntBuffer, int)
  getUnsignedInt(Ljava/nio/ByteBuffer;)I = GetUnsignedInt(Java.Nio.ByteBuffer)
  getUnsignedShort(Ljava/nio/ByteBuffer;)S = GetUnsignedShort(Java.Nio.ByteBuffer)
  intFromDouble(D)I = IntFromDouble(double)
  intFromFloat(F)I = IntFromFloat(float)
  longFromDouble(D)J = LongFromDouble(double)
  longFromFloat(F)J = LongFromFloat(float)
  putUnsigned(Ljava/nio/ByteBuffer;B)Ljava/nio/ByteBuffer; = PutUnsigned(Java.Nio.ByteBuffer, sbyte)
  putUnsigned(Ljava/nio/ByteBuffer;IB)Ljava/nio/ByteBuffer; = PutUnsigned(Java.Nio.ByteBuffer, int, sbyte)
  putUnsigned(Ljava/nio/IntBuffer;I)Ljava/nio/IntBuffer; = PutUnsigned(Java.Nio.IntBuffer, int)
  putUnsigned(Ljava/nio/IntBuffer;II)Ljava/nio/IntBuffer; = PutUnsigned(Java.Nio.IntBuffer, int, int)
  putUnsigned(Ljava/nio/IntBuffer;[I)Ljava/nio/IntBuffer; = PutUnsigned(Java.Nio.IntBuffer, int[])
  putUnsigned(Ljava/nio/IntBuffer;[III)Ljava/nio/IntBuffer; = PutUnsigned(Java.Nio.IntBuffer, int[], int, int)
  putUnsignedInt(Ljava/nio/ByteBuffer;I)Ljava/nio/ByteBuffer; = PutUnsignedInt(Java.Nio.ByteBuffer, int)
  putUnsignedInt(Ljava/nio/ByteBuffer;II)Ljava/nio/ByteBuffer; = PutUnsignedInt(Java.Nio.ByteBuffer, int, int)
  putUnsignedLong(Ljava/nio/ByteBuffer;IJ)Ljava/nio/ByteBuffer; = PutUnsignedLong(Java.Nio.ByteBuffer, int, long)
  putUnsignedShort(Ljava/nio/ByteBuffer;IS)Ljava/nio/ByteBuffer; = PutUnsignedShort(Java.Nio.ByteBuffer, int, short)
  putUnsignedShort(Ljava/nio/ByteBuffer;S)Ljava/nio/ByteBuffer; = PutUnsignedShort(Java.Nio.ByteBuffer, short)
  readFullyUnsigned(Ljava/io/RandomAccessFile;[B)V = ReadFullyUnsigned(Java.IO.RandomAccessFile, byte[])
  readUnsigned(Ljava/io/RandomAccessFile;[BII)I = ReadUnsigned(Java.IO.RandomAccessFile, byte[], int, int)
  readUnsignedByte(Ljava/io/RandomAccessFile;)B = ReadUnsignedByte(Java.IO.RandomAccessFile)
  readUnsignedChar(Ljava/io/RandomAccessFile;)C = ReadUnsignedChar(Java.IO.RandomAccessFile)
  readUnsignedInt(Ljava/io/RandomAccessFile;)I = ReadUnsignedInt(Java.IO.RandomAccessFile)
  readUnsignedLong(Ljava/io/RandomAccessFile;)J = ReadUnsignedLong(Java.IO.RandomAccessFile)
  readUnsignedShort(Ljava/io/RandomAccessFile;)S = ReadUnsignedShort(Java.IO.RandomAccessFile)
  shortFromDouble(D)S = ShortFromDouble(double)
  shortFromFloat(F)S = ShortFromFloat(float)
  toDouble(B)D = ToDouble(sbyte)
  toDouble(I)D = ToDouble(int)
  toDouble(J)D = ToDouble(long)
  toDouble(S)D = ToDouble(short)
  toFloat(B)F = ToFloat(sbyte)
  toFloat(I)F = ToFloat(int)
  toFloat(J)F = ToFloat(long)
  toFloat(S)F = ToFloat(short)
  toUnsignedInt(B)I = ToUnsignedInt(sbyte)
  toUnsignedInt(C)I = ToUnsignedInt(char)
  toUnsignedInt(S)I = ToUnsignedInt(short)
  toUnsignedLong(B)J = ToUnsignedLong(sbyte)
  toUnsignedLong(C)J = ToUnsignedLong(char)
  toUnsignedLong(I)J = ToUnsignedLong(int)
  toUnsignedLong(S)J = ToUnsignedLong(short)
  toUnsignedShort(B)S = ToUnsignedShort(sbyte)
  toUnsignedShort(C)S = ToUnsignedShort(char)
  toUnsignedString(B)Ljava/lang/String; = ToUnsignedString(sbyte)
  toUnsignedString(BI)Ljava/lang/String; = ToUnsignedString(sbyte, int)
  toUnsignedString(I)Ljava/lang/String; = ToUnsignedString(int)
  toUnsignedString(II)Ljava/lang/String; = ToUnsignedString(int, int)
  toUnsignedString(J)Ljava/lang/String; = ToUnsignedString(long)
  toUnsignedString(JI)Ljava/lang/String; = ToUnsignedString(long, int)
  toUnsignedString(S)Ljava/lang/String; = ToUnsignedString(short)
  toUnsignedString(SI)Ljava/lang/String; = ToUnsignedString(short, int)
  wrapUnsigned([B)Ljava/nio/ByteBuffer; = WrapUnsigned(byte[])
  wrapUnsigned([BII)Ljava/nio/ByteBuffer; = WrapUnsigned(byte[], int, int)
  writeUnsigned(Ljava/io/RandomAccessFile;[BII)V = WriteUnsigned(Java.IO.RandomAccessFile, byte[], int, int)
  writeUnsignedByte(Ljava/io/RandomAccessFile;B)V = WriteUnsignedByte(Java.IO.RandomAccessFile, sbyte)
  writeUnsignedChar(Ljava/io/RandomAccessFile;C)V = WriteUnsignedChar(Java.IO.RandomAccessFile, char)
  writeUnsignedInt(Ljava/io/RandomAccessFile;I)V = WriteUnsignedInt(Java.IO.RandomAccessFile, int)
  writeUnsignedLong(Ljava/io/RandomAccessFile;J)V = WriteUnsignedLong(Java.IO.RandomAccessFile, long)
  writeUnsignedShort(Ljava/io/RandomAccessFile;S)V = WriteUnsignedShort(Java.IO.RandomAccessFile, short)
org/checkerframework/checker/tainting/qual/PolyTainted = Org.Checkerframework.Checker.Tainting.Qual.IPolyTainted
org/checkerframework/checker/tainting/qual/Tainted = Org.Checkerframework.Checker.Tainting.Qual.ITainted
org/checkerframework/checker/tainting/qual/Untainted = Org.Checkerframework.Checker.Tainting.Qual.IUntainted
org/checkerframework/checker/units/qual/A = Org.Checkerframework.Checker.Units.Qual.IA
  value()Lorg/checkerframework/checker/units/qual/Prefix; = Value()
org/checkerframework/checker/units/qual/Acceleration = Org.Checkerframework.Checker.Units.Qual.IAcceleration
org/checkerframework/checker/units/qual/Angle = Org.Checkerframework.Checker.Units.Qual.IAngle
org/checkerframework/checker/units/qual/Area = Org.Checkerframework.Checker.Units.Qual.IArea
org/checkerframework/checker/units/qual/C = Org.Checkerframework.Checker.Units.Qual.IC
org/checkerframework/checker/units/qual/Current = Org.Checkerframework.Checker.Units.Qual.ICurrent
org/checkerframework/checker/units/qual/degrees = Org.Checkerframework.Checker.Units.Qual.IDegrees
org/checkerframework/checker/units/qual/K = Org.Checkerframework.Checker.Units.Qual.IK
  value()Lorg/checkerframework/checker/units/qual/Prefix; = Value()
org/checkerframework/checker/units/qual/km2 = Org.Checkerframework.Checker.Units.Qual.IKm2
org/checkerframework/checker/units/qual/kmPERh = Org.Checkerframework.Checker.Units.Qual.IKmPERh
org/checkerframework/checker/units/qual/Length = Org.Checkerframework.Checker.Units.Qual.ILength
org/checkerframework/checker/units/qual/Luminance = Org.Checkerframework.Checker.Units.Qual.ILuminance
org/checkerframework/checker/units/qual/Mass = Org.Checkerframework.Checker.Units.Qual.IMass
org/checkerframework/checker/units/qual/min = Org.Checkerframework.Checker.Units.Qual.IMin
org/checkerframework/checker/units/qual/MixedUnits = Org.Checkerframework.Checker.Units.Qual.IMixedUnits
org/checkerframework/checker/units/qual/mm2 = Org.Checkerframework.Checker.Units.Qual.IMm2
org/checkerframework/checker/units/qual/mol = Org.Checkerframework.Checker.Units.Qual.IMol
  value()Lorg/checkerframework/checker/units/qual/Prefix; = Value()
org/checkerframework/checker/units/qual/mPERs = Org.Checkerframework.Checker.Units.Qual.IMPERs
  value()Lorg/checkerframework/checker/units/qual/Prefix; = Value()
org/checkerframework/checker/units/qual/mPERs2 = Org.Checkerframework.Checker.Units.Qual.IMPERs2
  value()Lorg/checkerframework/checker/units/qual/Prefix; = Value()
org/checkerframework/checker/units/qual/PolyUnit = Org.Checkerframework.Checker.Units.Qual.IPolyUnit
org/checkerframework/checker/units/qual/Prefix = Org.Checkerframework.Checker.Units.Qual.Prefix
  atto = Atto
  centi = Centi
  deca = Deca
  deci = Deci
  exa = Exa
  femto = Femto
  giga = Giga
  hecto = Hecto
  kilo = Kilo
  mega = Mega
  micro = Micro
  milli = Milli
  nano = Nano
  one = One
  peta = Peta
  pico = Pico
  tera = Tera
  yocto = Yocto
  yotta = Yotta
  zepto = Zepto
  zetta = Zetta
  valueOf(Ljava/lang/String;)Lorg/checkerframework/checker/units/qual/Prefix; = ValueOf(string)
  values()[Lorg/checkerframework/checker/units/qual/Prefix; = Values()
org/checkerframework/checker/units/qual/radians = Org.Checkerframework.Checker.Units.Qual.IRadians
  value()Lorg/checkerframework/checker/units/qual/Prefix; = Value()
org/checkerframework/checker/units/qual/Speed = Org.Checkerframework.Checker.Units.Qual.ISpeed
org/checkerframework/checker/units/qual/Substance = Org.Checkerframework.Checker.Units.Qual.ISubstance
org/checkerframework/checker/units/qual/Temperature = Org.Checkerframework.Checker.Units.Qual.ITemperature
org/checkerframework/checker/units/qual/Time = Org.Checkerframework.Checker.Units.Qual.ITime
org/checkerframework/checker/units/qual/UnitsBottom = Org.Checkerframework.Checker.Units.Qual.IUnitsBottom
org/checkerframework/checker/units/qual/UnitsMultiple = Org.Checkerframework.Checker.Units.Qual.IUnitsMultiple
  prefix()Lorg/checkerframework/checker/units/qual/Prefix; = Prefix()
  quantity()Ljava/lang/Class; = Quantity()
org/checkerframework/checker/units/qual/UnitsRelations = Org.Checkerframework.Checker.Units.Qual.IUnitsRelations
  value()Ljava/lang/Class; = Value()
org/checkerframework/checker/units/qual/UnknownUnits = Org.Checkerframework.Checker.Units.Qual.IUnknownUnits
org/checkerframework/checker/units/UnitsTools = Org.Checkerframework.Checker.Units.UnitsTools
  <init>()V = .ctor()
  A = A
  C = C
  cd = Cd
  deg = Deg
  g = G
  h = H
  K = K
  kg = Kg
  km = Km
  km2 = Km2
  kmPERh = KmPERh
  m = M
  m2 = M2
  min = Min
  mm = Mm
  mm2 = Mm2
  mol = Mol
  mPERs = MPERs
  mPERs2 = MPERs2
  rad = Rad
  s = S
  fromCelsiusToKelvin(I)I = FromCelsiusToKelvin(int)
  fromGramToKiloGram(I)I = FromGramToKiloGram(int)
  fromHourToMinute(I)I = FromHourToMinute(int)
  fromKelvinToCelsius(I)I = FromKelvinToCelsius(int)
  fromKiloGramToGram(I)I = FromKiloGramToGram(int)
  fromKiloMeterPerHourToMeterPerSecond(D)D = FromKiloMeterPerHourToMeterPerSecond(double)
  fromKiloMeterToMeter(I)I = FromKiloMeterToMeter(int)
  fromMeterPerSecondToKiloMeterPerHour(D)D = FromMeterPerSecondToKiloMeterPerHour(double)
  fromMeterToKiloMeter(I)I = FromMeterToKiloMeter(int)
  fromMeterToMilliMeter(I)I = FromMeterToMilliMeter(int)
  fromMilliMeterToMeter(I)I = FromMilliMeterToMeter(int)
  fromMinuteToHour(I)I = FromMinuteToHour(int)
  fromMinuteToSecond(I)I = FromMinuteToSecond(int)
  fromSecondToMinute(I)I = FromSecondToMinute(int)
  toDegrees(D)D = ToDegrees(double)
  toRadians(D)D = ToRadians(double)
org/checkerframework/common/aliasing/qual/LeakedToResult = Org.Checkerframework.Common.Aliasing.Qual.ILeakedToResult
org/checkerframework/common/aliasing/qual/MaybeAliased = Org.Checkerframework.Common.Aliasing.Qual.IMaybeAliased
org/checkerframework/common/aliasing/qual/MaybeLeaked = Org.Checkerframework.Common.Aliasing.Qual.IMaybeLeaked
org/checkerframework/common/aliasing/qual/NonLeaked = Org.Checkerframework.Common.Aliasing.Qual.INonLeaked
org/checkerframework/common/aliasing/qual/Unique = Org.Checkerframework.Common.Aliasing.Qual.IUnique
org/checkerframework/common/reflection/qual/ClassBound = Org.Checkerframework.Common.Reflection.Qual.IClassBound
  value()[Ljava/lang/String; = Value()
org/checkerframework/common/reflection/qual/ClassVal = Org.Checkerframework.Common.Reflection.Qual.IClassVal
  value()[Ljava/lang/String; = Value()
org/checkerframework/common/reflection/qual/ClassValBottom = Org.Checkerframework.Common.Reflection.Qual.IClassValBottom
org/checkerframework/common/reflection/qual/ForName = Org.Checkerframework.Common.Reflection.Qual.IForName
org/checkerframework/common/reflection/qual/GetClass = Org.Checkerframework.Common.Reflection.Qual.IGetClass
org/checkerframework/common/reflection/qual/GetConstructor = Org.Checkerframework.Common.Reflection.Qual.IGetConstructor
org/checkerframework/common/reflection/qual/GetMethod = Org.Checkerframework.Common.Reflection.Qual.IGetMethod
org/checkerframework/common/reflection/qual/Invoke = Org.Checkerframework.Common.Reflection.Qual.IInvoke
org/checkerframework/common/reflection/qual/MethodVal = Org.Checkerframework.Common.Reflection.Qual.IMethodVal
  className()[Ljava/lang/String; = ClassName()
  methodName()[Ljava/lang/String; = MethodName()
  params()[I = Params()
org/checkerframework/common/reflection/qual/MethodValBottom = Org.Checkerframework.Common.Reflection.Qual.IMethodValBottom
org/checkerframework/common/reflection/qual/NewInstance = Org.Checkerframework.Common.Reflection.Qual.INewInstance
org/checkerframework/common/reflection/qual/UnknownClass = Org.Checkerframework.Common.Reflection.Qual.IUnknownClass
org/checkerframework/common/reflection/qual/UnknownMethod = Org.Checkerframework.Common.Reflection.Qual.IUnknownMethod
org/checkerframework/common/subtyping/qual/Bottom = Org.Checkerframework.Common.Subtyping.Qual.IBottom
org/checkerframework/common/subtyping/qual/Unqualified = Org.Checkerframework.Common.Subtyping.Qual.IUnqualified
org/checkerframework/common/util/report/qual/ReportCall = Org.Checkerframework.Common.Util.Report.Qual.IReportCall
org/checkerframework/common/util/report/qual/ReportCreation = Org.Checkerframework.Common.Util.Report.Qual.IReportCreation
org/checkerframework/common/util/report/qual/ReportInherit = Org.Checkerframework.Common.Util.Report.Qual.IReportInherit
org/checkerframework/common/util/report/qual/ReportOverride = Org.Checkerframework.Common.Util.Report.Qual.IReportOverride
org/checkerframework/common/util/report/qual/ReportReadWrite = Org.Checkerframework.Common.Util.Report.Qual.IReportReadWrite
org/checkerframework/common/util/report/qual/ReportUnqualified = Org.Checkerframework.Common.Util.Report.Qual.IReportUnqualified
org/checkerframework/common/util/report/qual/ReportUse = Org.Checkerframework.Common.Util.Report.Qual.IReportUse
org/checkerframework/common/util/report/qual/ReportWrite = Org.Checkerframework.Common.Util.Report.Qual.IReportWrite
org/checkerframework/common/value/qual/ArrayLen = Org.Checkerframework.Common.Value.Qual.IArrayLen
  value()[I = Value()
org/checkerframework/common/value/qual/ArrayLenRange = Org.Checkerframework.Common.Value.Qual.IArrayLenRange
  from()I = From()
  to()I = To()
org/checkerframework/common/value/qual/BoolVal = Org.Checkerframework.Common.Value.Qual.IBoolVal
  value()[Z = Value()
org/checkerframework/common/value/qual/BottomVal = Org.Checkerframework.Common.Value.Qual.IBottomVal
org/checkerframework/common/value/qual/DoubleVal = Org.Checkerframework.Common.Value.Qual.IDoubleVal
  value()[D = Value()
org/checkerframework/common/value/qual/EnsuresMinLenIf = Org.Checkerframework.Common.Value.Qual.IEnsuresMinLenIf
  expression()[Ljava/lang/String; = Expression()
  result()Z = Result()
  targetValue()I = TargetValue()
org/checkerframework/common/value/qual/IntRange = Org.Checkerframework.Common.Value.Qual.IIntRange
  from()J = From()
  to()J = To()
org/checkerframework/common/value/qual/IntRangeFromGTENegativeOne = Org.Checkerframework.Common.Value.Qual.IIntRangeFromGTENegativeOne
org/checkerframework/common/value/qual/IntRangeFromNonNegative = Org.Checkerframework.Common.Value.Qual.IIntRangeFromNonNegative
org/checkerframework/common/value/qual/IntRangeFromPositive = Org.Checkerframework.Common.Value.Qual.IIntRangeFromPositive
org/checkerframework/common/value/qual/IntVal = Org.Checkerframework.Common.Value.Qual.IIntVal
  value()[J = Value()
org/checkerframework/common/value/qual/MinLen = Org.Checkerframework.Common.Value.Qual.IMinLen
  value()I = Value()
org/checkerframework/common/value/qual/MinLenFieldInvariant = Org.Checkerframework.Common.Value.Qual.IMinLenFieldInvariant
  field()[Ljava/lang/String; = Field()
  minLen()[I = MinLen()
org/checkerframework/common/value/qual/PolyValue = Org.Checkerframework.Common.Value.Qual.IPolyValue
org/checkerframework/common/value/qual/StaticallyExecutable = Org.Checkerframework.Common.Value.Qual.IStaticallyExecutable
org/checkerframework/common/value/qual/StringVal = Org.Checkerframework.Common.Value.Qual.IStringVal
  value()[Ljava/lang/String; = Value()
org/checkerframework/common/value/qual/UnknownVal = Org.Checkerframework.Common.Value.Qual.IUnknownVal
org/checkerframework/dataflow/qual/Deterministic = Org.Checkerframework.Dataflow.Qual.IDeterministic
org/checkerframework/dataflow/qual/Pure = Org.Checkerframework.Dataflow.Qual.IPure
org/checkerframework/dataflow/qual/SideEffectFree = Org.Checkerframework.Dataflow.Qual.ISideEffectFree
org/checkerframework/dataflow/qual/TerminatesExecution = Org.Checkerframework.Dataflow.Qual.ITerminatesExecution
org/checkerframework/framework/qual/AnnotatedFor = Org.Checkerframework.Framework.Qual.IAnnotatedFor
  value()[Ljava/lang/String; = Value()
org/checkerframework/framework/qual/ConditionalPostconditionAnnotation = Org.Checkerframework.Framework.Qual.IConditionalPostconditionAnnotation
  qualifier()Ljava/lang/Class; = Qualifier()
org/checkerframework/framework/qual/Covariant = Org.Checkerframework.Framework.Qual.ICovariant
  value()[I = Value()
org/checkerframework/framework/qual/DefaultFor = Org.Checkerframework.Framework.Qual.IDefaultFor
  value()[Lorg/checkerframework/framework/qual/TypeUseLocation; = Value()
org/checkerframework/framework/qual/DefaultInUncheckedCodeFor = Org.Checkerframework.Framework.Qual.IDefaultInUncheckedCodeFor
  value()[Lorg/checkerframework/framework/qual/TypeUseLocation; = Value()
org/checkerframework/framework/qual/DefaultQualifier = Org.Checkerframework.Framework.Qual.IDefaultQualifier
  locations()[Lorg/checkerframework/framework/qual/TypeUseLocation; = Locations()
  value()Ljava/lang/Class; = Value()
org/checkerframework/framework/qual/DefaultQualifierInHierarchy = Org.Checkerframework.Framework.Qual.IDefaultQualifierInHierarchy
org/checkerframework/framework/qual/DefaultQualifierInHierarchyInUncheckedCode = Org.Checkerframework.Framework.Qual.IDefaultQualifierInHierarchyInUncheckedCode
org/checkerframework/framework/qual/DefaultQualifiers = Org.Checkerframework.Framework.Qual.IDefaultQualifiers
  value()[Lorg/checkerframework/framework/qual/DefaultQualifier; = Value()
org/checkerframework/framework/qual/EnsuresQualifier = Org.Checkerframework.Framework.Qual.IEnsuresQualifier
  expression()[Ljava/lang/String; = Expression()
  qualifier()Ljava/lang/Class; = Qualifier()
org/checkerframework/framework/qual/EnsuresQualifierIf = Org.Checkerframework.Framework.Qual.IEnsuresQualifierIf
  expression()[Ljava/lang/String; = Expression()
  qualifier()Ljava/lang/Class; = Qualifier()
  result()Z = Result()
org/checkerframework/framework/qual/EnsuresQualifiers = Org.Checkerframework.Framework.Qual.IEnsuresQualifiers
  value()[Lorg/checkerframework/framework/qual/EnsuresQualifier; = Value()
org/checkerframework/framework/qual/EnsuresQualifiersIf = Org.Checkerframework.Framework.Qual.IEnsuresQualifiersIf
  value()[Lorg/checkerframework/framework/qual/EnsuresQualifierIf; = Value()
org/checkerframework/framework/qual/FieldInvariant = Org.Checkerframework.Framework.Qual.IFieldInvariant
  field()[Ljava/lang/String; = Field()
  qualifier()[Ljava/lang/Class; = Qualifier()
org/checkerframework/framework/qual/FromByteCode = Org.Checkerframework.Framework.Qual.IFromByteCode
org/checkerframework/framework/qual/FromStubFile = Org.Checkerframework.Framework.Qual.IFromStubFile
org/checkerframework/framework/qual/IgnoreInWholeProgramInference = Org.Checkerframework.Framework.Qual.IIgnoreInWholeProgramInference
org/checkerframework/framework/qual/ImplicitFor = Org.Checkerframework.Framework.Qual.IImplicitFor
  literals()[Lorg/checkerframework/framework/qual/LiteralKind; = Literals()
  stringPatterns()[Ljava/lang/String; = StringPatterns()
  typeNames()[Ljava/lang/Class; = TypeNames()
  types()[Lorg/checkerframework/framework/qual/TypeKind; = Types()
org/checkerframework/framework/qual/InheritedAnnotation = Org.Checkerframework.Framework.Qual.IInheritedAnnotation
org/checkerframework/framework/qual/InvisibleQualifier = Org.Checkerframework.Framework.Qual.IInvisibleQualifier
org/checkerframework/framework/qual/JavaExpression = Org.Checkerframework.Framework.Qual.IJavaExpression
org/checkerframework/framework/qual/LiteralKind = Org.Checkerframework.Framework.Qual.LiteralKind
  ALL = All
  BOOLEAN = Boolean
  CHAR = Char
  DOUBLE = Double
  FLOAT = Float
  INT = Int
  LONG = Long
  NULL = Null
  PRIMITIVE = Primitive
  STRING = String
  allLiteralKinds()Ljava/util/List; = AllLiteralKinds()
  primitiveLiteralKinds()Ljava/util/List; = PrimitiveLiteralKinds()
  valueOf(Ljava/lang/String;)Lorg/checkerframework/framework/qual/LiteralKind; = ValueOf(string)
  values()[Lorg/checkerframework/framework/qual/LiteralKind; = Values()
org/checkerframework/framework/qual/MonotonicQualifier = Org.Checkerframework.Framework.Qual.IMonotonicQualifier
  value()Ljava/lang/Class; = Value()
org/checkerframework/framework/qual/PolyAll = Org.Checkerframework.Framework.Qual.IPolyAll
org/checkerframework/framework/qual/PolymorphicQualifier = Org.Checkerframework.Framework.Qual.IPolymorphicQualifier
  value()Ljava/lang/Class; = Value()
org/checkerframework/framework/qual/PostconditionAnnotation = Org.Checkerframework.Framework.Qual.IPostconditionAnnotation
  qualifier()Ljava/lang/Class; = Qualifier()
org/checkerframework/framework/qual/PreconditionAnnotation = Org.Checkerframework.Framework.Qual.IPreconditionAnnotation
  qualifier()Ljava/lang/Class; = Qualifier()
org/checkerframework/framework/qual/QualifierArgument = Org.Checkerframework.Framework.Qual.IQualifierArgument
  value()Ljava/lang/String; = Value()
org/checkerframework/framework/qual/RelevantJavaTypes = Org.Checkerframework.Framework.Qual.IRelevantJavaTypes
  value()[Ljava/lang/Class; = Value()
org/checkerframework/framework/qual/RequiresQualifier = Org.Checkerframework.Framework.Qual.IRequiresQualifier
  expression()[Ljava/lang/String; = Expression()
  qualifier()Ljava/lang/Class; = Qualifier()
org/checkerframework/framework/qual/RequiresQualifiers = Org.Checkerframework.Framework.Qual.IRequiresQualifiers
  value()[Lorg/checkerframework/framework/qual/RequiresQualifier; = Value()
org/checkerframework/framework/qual/StubFiles = Org.Checkerframework.Framework.Qual.IStubFiles
  value()[Ljava/lang/String; = Value()
org/checkerframework/framework/qual/SubtypeOf = Org.Checkerframework.Framework.Qual.ISubtypeOf
  value()[Ljava/lang/Class; = Value()
org/checkerframework/framework/qual/TargetLocations = Org.Checkerframework.Framework.Qual.ITargetLocations
  value()[Lorg/checkerframework/framework/qual/TypeUseLocation; = Value()
org/checkerframework/framework/qual/TypeKind = Org.Checkerframework.Framework.Qual.TypeKind
  ARRAY = Array
  BOOLEAN = Boolean
  BYTE = Byte
  CHAR = Char
  DECLARED = Declared
  DOUBLE = Double
  ERROR = Error
  EXECUTABLE = Executable
  FLOAT = Float
  INT = Int
  INTERSECTION = Intersection
  LONG = Long
  NONE = None
  NULL = Null
  OTHER = Other
  PACKAGE = Package
  SHORT = Short
  TYPEVAR = Typevar
  UNION = Union
  VOID = Void
  WILDCARD = Wildcard
  valueOf(Ljava/lang/String;)Lorg/checkerframework/framework/qual/TypeKind; = ValueOf(string)
  values()[Lorg/checkerframework/framework/qual/TypeKind; = Values()
org/checkerframework/framework/qual/TypeUseLocation = Org.Checkerframework.Framework.Qual.TypeUseLocation
  ALL = All
  CONSTRUCTOR_RESULT = ConstructorResult
  EXCEPTION_PARAMETER = ExceptionParameter
  EXPLICIT_LOWER_BOUND = ExplicitLowerBound
  EXPLICIT_UPPER_BOUND = ExplicitUpperBound
  FIELD = Field
  IMPLICIT_LOWER_BOUND = ImplicitLowerBound
  IMPLICIT_UPPER_BOUND = ImplicitUpperBound
  LOCAL_VARIABLE = LocalVariable
  LOWER_BOUND = LowerBound
  OTHERWISE = Otherwise
  PARAMETER = Parameter
  RECEIVER = Receiver
  RESOURCE_VARIABLE = ResourceVariable
  RETURN = Return
  TYPE_DECLARATION = TypeDeclaration
  UPPER_BOUND = UpperBound
  valueOf(Ljava/lang/String;)Lorg/checkerframework/framework/qual/TypeUseLocation; = ValueOf(string)
  values()[Lorg/checkerframework/framework/qual/TypeUseLocation; = Values()
org/checkerframework/framework/qual/Unused = Org.Checkerframework.Framework.Qual.IUnused
  when()Ljava/lang/Class; = When()
org/checkerframework/framework/util/PurityUnqualified = Org.Checkerframework.Framework.Util.IPurityUnqualified
org/codehaus/mojo/animal_sniffer/IgnoreJRERequirement = Org.Codehaus.Mojo.Animal_sniffer.IIgnoreJRERequirement
org/intellij/lang/annotations/Flow = Org.Intellij.Lang.Annotations.IFlow
  DEFAULT_SOURCE = DefaultSource
  DEFAULT_TARGET = DefaultTarget
  RETURN_METHOD_TARGET = ReturnMethodTarget
  THIS_SOURCE = ThisSource
  THIS_TARGET = ThisTarget
  source()Ljava/lang/String; = Source()
  sourceIsContainer()Z = SourceIsContainer()
  target()Ljava/lang/String; = Target()
  targetIsContainer()Z = TargetIsContainer()
org/intellij/lang/annotations/Identifier = Org.Intellij.Lang.Annotations.IIdentifier
org/intellij/lang/annotations/JdkConstants = Org.Intellij.Lang.Annotations.JdkConstants
  <init>()V = .ctor()
org/intellij/lang/annotations/Language = Org.Intellij.Lang.Annotations.ILanguage
  prefix()Ljava/lang/String; = Prefix()
  suffix()Ljava/lang/String; = Suffix()
  value()Ljava/lang/String; = Value()
org/intellij/lang/annotations/MagicConstant = Org.Intellij.Lang.Annotations.IMagicConstant
  flags()[J = Flags()
  flagsFromClass()Ljava/lang/Class; = FlagsFromClass()
  intValues()[J = IntValues()
  stringValues()[Ljava/lang/String; = StringValues()
  valuesFromClass()Ljava/lang/Class; = ValuesFromClass()
org/intellij/lang/annotations/Pattern = Org.Intellij.Lang.Annotations.IPattern
  value()Ljava/lang/String; = Value()
org/intellij/lang/annotations/PrintFormat = Org.Intellij.Lang.Annotations.IPrintFormat
org/intellij/lang/annotations/RegExp = Org.Intellij.Lang.Annotations.IRegExp
  prefix()Ljava/lang/String; = Prefix()
  suffix()Ljava/lang/String; = Suffix()
org/intellij/lang/annotations/Subst = Org.Intellij.Lang.Annotations.ISubst
  value()Ljava/lang/String; = Value()
org/junit/After = Org.Junit.IAfter
org/junit/AfterClass = Org.Junit.IAfterClass
org/junit/Assert = Org.Junit.Assert
  <init>()V = .ctor()
  assertArrayEquals([Z[Z)V = AssertArrayEquals(bool[], bool[])
  assertArrayEquals([B[B)V = AssertArrayEquals(byte[], byte[])
  assertArrayEquals([C[C)V = AssertArrayEquals(char[], char[])
  assertArrayEquals([D[DD)V = AssertArrayEquals(double[], double[], double)
  assertArrayEquals([F[FF)V = AssertArrayEquals(float[], float[], float)
  assertArrayEquals([I[I)V = AssertArrayEquals(int[], int[])
  assertArrayEquals([Ljava/lang/Object;[Ljava/lang/Object;)V = AssertArrayEquals(Java.Lang.Object[], Java.Lang.Object[])
  assertArrayEquals(Ljava/lang/String;[Z[Z)V = AssertArrayEquals(string, bool[], bool[])
  assertArrayEquals(Ljava/lang/String;[B[B)V = AssertArrayEquals(string, byte[], byte[])
  assertArrayEquals(Ljava/lang/String;[C[C)V = AssertArrayEquals(string, char[], char[])
  assertArrayEquals(Ljava/lang/String;[D[DD)V = AssertArrayEquals(string, double[], double[], double)
  assertArrayEquals(Ljava/lang/String;[F[FF)V = AssertArrayEquals(string, float[], float[], float)
  assertArrayEquals(Ljava/lang/String;[I[I)V = AssertArrayEquals(string, int[], int[])
  assertArrayEquals(Ljava/lang/String;[Ljava/lang/Object;[Ljava/lang/Object;)V = AssertArrayEquals(string, Java.Lang.Object[], Java.Lang.Object[])
  assertArrayEquals(Ljava/lang/String;[J[J)V = AssertArrayEquals(string, long[], long[])
  assertArrayEquals(Ljava/lang/String;[S[S)V = AssertArrayEquals(string, short[], short[])
  assertArrayEquals([J[J)V = AssertArrayEquals(long[], long[])
  assertArrayEquals([S[S)V = AssertArrayEquals(short[], short[])
  assertEquals(DD)V = AssertEquals(double, double)
  assertEquals(DDD)V = AssertEquals(double, double, double)
  assertEquals(FFF)V = AssertEquals(float, float, float)
  assertEquals(Ljava/lang/Object;Ljava/lang/Object;)V = AssertEquals(Java.Lang.Object, Java.Lang.Object)
  assertEquals([Ljava/lang/Object;[Ljava/lang/Object;)V = AssertEquals(Java.Lang.Object[], Java.Lang.Object[])
  assertEquals(Ljava/lang/String;DD)V = AssertEquals(string, double, double)
  assertEquals(Ljava/lang/String;DDD)V = AssertEquals(string, double, double, double)
  assertEquals(Ljava/lang/String;FFF)V = AssertEquals(string, float, float, float)
  assertEquals(Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Object;)V = AssertEquals(string, Java.Lang.Object, Java.Lang.Object)
  assertEquals(Ljava/lang/String;[Ljava/lang/Object;[Ljava/lang/Object;)V = AssertEquals(string, Java.Lang.Object[], Java.Lang.Object[])
  assertEquals(Ljava/lang/String;JJ)V = AssertEquals(string, long, long)
  assertEquals(JJ)V = AssertEquals(long, long)
  assertFalse(Z)V = AssertFalse(bool)
  assertFalse(Ljava/lang/String;Z)V = AssertFalse(string, bool)
  assertNotEquals(DDD)V = AssertNotEquals(double, double, double)
  assertNotEquals(FFF)V = AssertNotEquals(float, float, float)
  assertNotEquals(Ljava/lang/Object;Ljava/lang/Object;)V = AssertNotEquals(Java.Lang.Object, Java.Lang.Object)
  assertNotEquals(Ljava/lang/String;DDD)V = AssertNotEquals(string, double, double, double)
  assertNotEquals(Ljava/lang/String;FFF)V = AssertNotEquals(string, float, float, float)
  assertNotEquals(Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Object;)V = AssertNotEquals(string, Java.Lang.Object, Java.Lang.Object)
  assertNotEquals(Ljava/lang/String;JJ)V = AssertNotEquals(string, long, long)
  assertNotEquals(JJ)V = AssertNotEquals(long, long)
  assertNotNull(Ljava/lang/Object;)V = AssertNotNull(Java.Lang.Object)
  assertNotNull(Ljava/lang/String;Ljava/lang/Object;)V = AssertNotNull(string, Java.Lang.Object)
  assertNotSame(Ljava/lang/Object;Ljava/lang/Object;)V = AssertNotSame(Java.Lang.Object, Java.Lang.Object)
  assertNotSame(Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Object;)V = AssertNotSame(string, Java.Lang.Object, Java.Lang.Object)
  assertNull(Ljava/lang/Object;)V = AssertNull(Java.Lang.Object)
  assertNull(Ljava/lang/String;Ljava/lang/Object;)V = AssertNull(string, Java.Lang.Object)
  assertSame(Ljava/lang/Object;Ljava/lang/Object;)V = AssertSame(Java.Lang.Object, Java.Lang.Object)
  assertSame(Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Object;)V = AssertSame(string, Java.Lang.Object, Java.Lang.Object)
  assertTrue(Z)V = AssertTrue(bool)
  assertTrue(Ljava/lang/String;Z)V = AssertTrue(string, bool)
  fail()V = Fail()
  fail(Ljava/lang/String;)V = Fail(string)
org/junit/Assume = Org.Junit.Assume
  <init>()V = .ctor()
  assumeFalse(Z)V = AssumeFalse(bool)
  assumeFalse(Ljava/lang/String;Z)V = AssumeFalse(string, bool)
  assumeNoException(Ljava/lang/String;Ljava/lang/Throwable;)V = AssumeNoException(string, Java.Lang.Throwable)
  assumeNoException(Ljava/lang/Throwable;)V = AssumeNoException(Java.Lang.Throwable)
  assumeNotNull([Ljava/lang/Object;)V = AssumeNotNull(params Java.Lang.Object[])
  assumeTrue(Z)V = AssumeTrue(bool)
  assumeTrue(Ljava/lang/String;Z)V = AssumeTrue(string, bool)
org/junit/AssumptionViolatedException = Org.Junit.AssumptionViolatedException
  <init>(Ljava/lang/String;)V = .ctor(string)
  <init>(Ljava/lang/String;Ljava/lang/Throwable;)V = .ctor(string, Java.Lang.Throwable)
org/junit/Before = Org.Junit.IBefore
org/junit/BeforeClass = Org.Junit.IBeforeClass
org/junit/ClassRule = Org.Junit.IClassRule
org/junit/ComparisonFailure = Org.Junit.ComparisonFailure
  <init>(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V = .ctor(string, string, string)
  getActual()Ljava/lang/String; = Actual
  getExpected()Ljava/lang/String; = Expected
org/junit/experimental/categories/Category = Org.Junit.Experimental.Categories.ICategory
  value()[Ljava/lang/Class; = Value()
org/junit/experimental/categories/CategoryValidator = Org.Junit.Experimental.Categories.CategoryValidator
  <init>()V = .ctor()
org/junit/experimental/categories/ExcludeCategories = Org.Junit.Experimental.Categories.ExcludeCategories
  <init>()V = .ctor()
org/junit/experimental/categories/IncludeCategories = Org.Junit.Experimental.Categories.IncludeCategories
  <init>()V = .ctor()
org/junit/experimental/max/CouldNotReadCoreException = Org.Junit.Experimental.Max.CouldNotReadCoreException
  <init>(Ljava/lang/Throwable;)V = .ctor(Java.Lang.Throwable)
org/junit/experimental/max/MaxCore = Org.Junit.Experimental.Max.MaxCore
  forFolder(Ljava/lang/String;)Lorg/junit/experimental/max/MaxCore; = ForFolder(string)
  storedLocally(Ljava/io/File;)Lorg/junit/experimental/max/MaxCore; = StoredLocally(Java.IO.File)
org/junit/experimental/max/MaxHistory = Org.Junit.Experimental.Max.MaxHistory
  forFolder(Ljava/io/File;)Lorg/junit/experimental/max/MaxHistory; = ForFolder(Java.IO.File)
  testComparator()Ljava/util/Comparator; = TestComparator()
org/junit/experimental/results/PrintableResult = Org.Junit.Experimental.Results.PrintableResult
  failureCount()I = FailureCount()
  testResult(Ljava/lang/Class;)Lorg/junit/experimental/results/PrintableResult; = TestResult(Java.Lang.Class)
org/junit/experimental/results/ResultMatchers = Org.Junit.Experimental.Results.ResultMatchers
  <init>()V = .ctor()
org/junit/experimental/theories/DataPoint = Org.Junit.Experimental.Theories.IDataPoint
  ignoredExceptions()[Ljava/lang/Class; = IgnoredExceptions()
  value()[Ljava/lang/String; = Value()
org/junit/experimental/theories/DataPoints = Org.Junit.Experimental.Theories.IDataPoints
  ignoredExceptions()[Ljava/lang/Class; = IgnoredExceptions()
  value()[Ljava/lang/String; = Value()
org/junit/experimental/theories/FromDataPoints = Org.Junit.Experimental.Theories.IFromDataPoints
  value()Ljava/lang/String; = Value()
org/junit/experimental/theories/internal/AllMembersSupplier = Org.Junit.Experimental.Theories.Internal.AllMembersSupplier
  getDataPointsFields(Lorg/junit/experimental/theories/ParameterSignature;)Ljava/util/Collection; = GetDataPointsFields(Org.Junit.Experimental.Theories.ParameterSignature)
  getSingleDataPointFields(Lorg/junit/experimental/theories/ParameterSignature;)Ljava/util/Collection; = GetSingleDataPointFields(Org.Junit.Experimental.Theories.ParameterSignature)
  getValueSources(Lorg/junit/experimental/theories/ParameterSignature;)Ljava/util/List; = GetValueSources(Org.Junit.Experimental.Theories.ParameterSignature)
org/junit/experimental/theories/internal/Assignments = Org.Junit.Experimental.Theories.Internal.Assignments
  isComplete()Z = IsComplete
  assignNext(Lorg/junit/experimental/theories/PotentialAssignment;)Lorg/junit/experimental/theories/internal/Assignments; = AssignNext(Org.Junit.Experimental.Theories.PotentialAssignment)
  getActualValues(II)[Ljava/lang/Object; = GetActualValues(int, int)
  getAllArguments()[Ljava/lang/Object; = GetAllArguments()
  getArgumentStrings(Z)[Ljava/lang/Object; = GetArgumentStrings(bool)
  getConstructorArguments()[Ljava/lang/Object; = GetConstructorArguments()
  getMethodArguments()[Ljava/lang/Object; = GetMethodArguments()
  nextUnassigned()Lorg/junit/experimental/theories/ParameterSignature; = NextUnassigned()
  potentialsForNextUnassigned()Ljava/util/List; = PotentialsForNextUnassigned()
org/junit/experimental/theories/internal/BooleanSupplier = Org.Junit.Experimental.Theories.Internal.BooleanSupplier
  <init>()V = .ctor()
  getValueSources(Lorg/junit/experimental/theories/ParameterSignature;)Ljava/util/List; = GetValueSources(Org.Junit.Experimental.Theories.ParameterSignature)
org/junit/experimental/theories/internal/EnumSupplier = Org.Junit.Experimental.Theories.Internal.EnumSupplier
  <init>(Ljava/lang/Class;)V = .ctor(Java.Lang.Class)
  getValueSources(Lorg/junit/experimental/theories/ParameterSignature;)Ljava/util/List; = GetValueSources(Org.Junit.Experimental.Theories.ParameterSignature)
org/junit/experimental/theories/internal/ParameterizedAssertionError = Org.Junit.Experimental.Theories.Internal.ParameterizedAssertionError
  <init>(Ljava/lang/Throwable;Ljava/lang/String;[Ljava/lang/Object;)V = .ctor(Java.Lang.Throwable, string, params Java.Lang.Object[])
  equals(Ljava/lang/Object;)Z = Equals(Java.Lang.Object)
  hashCode()I = GetHashCode()
  join(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String; = Join(string, params Java.Lang.Object[])
  join(Ljava/lang/String;Ljava/util/Collection;)Ljava/lang/String; = Join(string, System.Collections.Generic.ICollection<Java.Lang.Object>)
org/junit/experimental/theories/internal/SpecificDataPointsSupplier = Org.Junit.Experimental.Theories.Internal.SpecificDataPointsSupplier
org/junit/experimental/theories/ParameterSignature = Org.Junit.Experimental.Theories.ParameterSignature
  getAnnotations()Ljava/util/List; = Annotations
  getType()Ljava/lang/Class; = Type
  canAcceptType(Ljava/lang/Class;)Z = CanAcceptType(Java.Lang.Class)
  canAcceptValue(Ljava/lang/Object;)Z = CanAcceptValue(Java.Lang.Object)
  canPotentiallyAcceptType(Ljava/lang/Class;)Z = CanPotentiallyAcceptType(Java.Lang.Class)
  findDeepAnnotation(Ljava/lang/Class;)Ljava/lang/annotation/Annotation; = FindDeepAnnotation(Java.Lang.Class)
  getAnnotation(Ljava/lang/Class;)Ljava/lang/annotation/Annotation; = GetAnnotation(Java.Lang.Class)
  hasAnnotation(Ljava/lang/Class;)Z = HasAnnotation(Java.Lang.Class)
  signatures(Ljava/lang/reflect/Constructor;)Ljava/util/List; = Signatures(Java.Lang.Reflect.Constructor)
  signatures(Ljava/lang/reflect/Method;)Ljava/util/ArrayList; = Signatures(Java.Lang.Reflect.Method)
org/junit/experimental/theories/ParametersSuppliedBy = Org.Junit.Experimental.Theories.IParametersSuppliedBy
  value()Ljava/lang/Class; = Value()
org/junit/experimental/theories/ParameterSupplier = Org.Junit.Experimental.Theories.ParameterSupplier
  <init>()V = .ctor()
  getValueSources(Lorg/junit/experimental/theories/ParameterSignature;)Ljava/util/List; = GetValueSources(Org.Junit.Experimental.Theories.ParameterSignature)
org/junit/experimental/theories/PotentialAssignment = Org.Junit.Experimental.Theories.PotentialAssignment
  <init>()V = .ctor()
  getDescription()Ljava/lang/String; = Description
  getValue()Ljava/lang/Object; = Value
  forValue(Ljava/lang/String;Ljava/lang/Object;)Lorg/junit/experimental/theories/PotentialAssignment; = ForValue(string, Java.Lang.Object)
org/junit/experimental/theories/suppliers/TestedOn = Org.Junit.Experimental.Theories.Suppliers.ITestedOn
  ints()[I = Ints()
org/junit/experimental/theories/suppliers/TestedOnSupplier = Org.Junit.Experimental.Theories.Suppliers.TestedOnSupplier
  <init>()V = .ctor()
  getValueSources(Lorg/junit/experimental/theories/ParameterSignature;)Ljava/util/List; = GetValueSources(Org.Junit.Experimental.Theories.ParameterSignature)
org/junit/experimental/theories/Theory = Org.Junit.Experimental.Theories.ITheory
  nullsAccepted()Z = NullsAccepted()
org/junit/Ignore = Org.Junit.IIgnore
  value()Ljava/lang/String; = Value()
org/junit/internal/ArrayComparisonFailure = Org.Junit.Internal.ArrayComparisonFailure
  <init>(Ljava/lang/String;Ljava/lang/AssertionError;I)V = .ctor(string, Java.Lang.AssertionError, int)
  addDimension(I)V = AddDimension(int)
  toString()Ljava/lang/String; = ToString()
org/junit/internal/AssumptionViolatedException = Org.Junit.Internal.AssumptionViolatedException
  <init>(Ljava/lang/String;)V = .ctor(string)
  <init>(Ljava/lang/String;Ljava/lang/Throwable;)V = .ctor(string, Java.Lang.Throwable)
org/junit/internal/Classes = Org.Junit.Internal.Classes
  <init>()V = .ctor()
  getClass(Ljava/lang/String;)Ljava/lang/Class; = GetClass(string)
org/junit/internal/ComparisonCriteria = Org.Junit.Internal.ComparisonCriteria
  <init>()V = .ctor()
  arrayEquals(Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Object;)V = ArrayEquals(string, Java.Lang.Object, Java.Lang.Object)
  assertElementsEqual(Ljava/lang/Object;Ljava/lang/Object;)V = AssertElementsEqual(Java.Lang.Object, Java.Lang.Object)
org/junit/internal/ExactComparisonCriteria = Org.Junit.Internal.ExactComparisonCriteria
  <init>()V = .ctor()
  assertElementsEqual(Ljava/lang/Object;Ljava/lang/Object;)V = AssertElementsEqual(Java.Lang.Object, Java.Lang.Object)
org/junit/internal/InexactComparisonCriteria = Org.Junit.Internal.InexactComparisonCriteria
  <init>(D)V = .ctor(double)
  <init>(F)V = .ctor(float)
  fDelta = FDelta
  assertElementsEqual(Ljava/lang/Object;Ljava/lang/Object;)V = AssertElementsEqual(Java.Lang.Object, Java.Lang.Object)
org/junit/internal/JUnitSystem = Org.Junit.Internal.IJUnitSystem
  exit(I)V = Exit(int)
  out()Ljava/io/PrintStream; = Out()
org/junit/internal/MethodSorter = Org.Junit.Internal.MethodSorter
  DEFAULT = Default
  NAME_ASCENDING = NameAscending
  getDeclaredMethods(Ljava/lang/Class;)[Ljava/lang/reflect/Method; = GetDeclaredMethods(Java.Lang.Class)
org/junit/internal/RealSystem = Org.Junit.Internal.RealSystem
  <init>()V = .ctor()
  exit(I)V = Exit(int)
  out()Ljava/io/PrintStream; = Out()
org/junit/internal/runners/ClassRoadie = Org.Junit.Internal.Runners.ClassRoadie
  addFailure(Ljava/lang/Throwable;)V = AddFailure(Java.Lang.Throwable)
  runProtected()V = RunProtected()
  runUnprotected()V = RunUnprotected()
org/junit/internal/runners/InitializationError = Org.Junit.Internal.Runners.InitializationError
  <init>([Ljava/lang/Throwable;)V = .ctor(params Java.Lang.Throwable[])
  <init>(Ljava/lang/String;)V = .ctor(string)
  <init>(Ljava/util/List;)V = .ctor(System.Collections.Generic.IList<Java.Lang.Throwable>)
  getCauses()Ljava/util/List; = Causes
org/junit/internal/runners/MethodRoadie = Org.Junit.Internal.Runners.MethodRoadie
  addFailure(Ljava/lang/Throwable;)V = AddFailure(Java.Lang.Throwable)
  run()V = Run()
  runBeforesThenTestThenAfters(Ljava/lang/Runnable;)V = RunBeforesThenTestThenAfters(Java.Lang.IRunnable)
  runTest()V = RunTest()
  runTestMethod()V = RunTestMethod()
org/junit/internal/runners/MethodValidator = Org.Junit.Internal.Runners.MethodValidator
  <init>(Lorg/junit/internal/runners/TestClass;)V = .ctor(Org.Junit.Internal.Runners.TestClass)
  assertValid()V = AssertValid()
  validateInstanceMethods()V = ValidateInstanceMethods()
  validateMethodsForDefaultRunner()Ljava/util/List; = ValidateMethodsForDefaultRunner()
  validateNoArgConstructor()V = ValidateNoArgConstructor()
  validateStaticMethods()V = ValidateStaticMethods()
org/junit/internal/runners/model/EachTestNotifier = Org.Junit.Internal.Runners.Model.EachTestNotifier
  addFailedAssumption(Lorg/junit/internal/AssumptionViolatedException;)V = AddFailedAssumption(Org.Junit.Internal.AssumptionViolatedException)
  addFailure(Ljava/lang/Throwable;)V = AddFailure(Java.Lang.Throwable)
  fireTestFinished()V = FireTestFinished()
  fireTestIgnored()V = FireTestIgnored()
  fireTestStarted()V = FireTestStarted()
org/junit/internal/runners/model/ReflectiveCallable = Org.Junit.Internal.Runners.Model.ReflectiveCallable
  <init>()V = .ctor()
  run()Ljava/lang/Object; = Run()
  runReflectiveCall()Ljava/lang/Object; = RunReflectiveCall()
org/junit/internal/runners/rules/RuleMemberValidator = Org.Junit.Internal.Runners.Rules.RuleMemberValidator
  CLASS_RULE_METHOD_VALIDATOR = ClassRuleMethodValidator
  CLASS_RULE_VALIDATOR = ClassRuleValidator
  RULE_METHOD_VALIDATOR = RuleMethodValidator
  RULE_VALIDATOR = RuleValidator
org/junit/internal/runners/TestClass = Org.Junit.Internal.Runners.TestClass
  <init>(Ljava/lang/Class;)V = .ctor(Java.Lang.Class)
  getConstructor()Ljava/lang/reflect/Constructor; = Constructor
  getJavaClass()Ljava/lang/Class; = JavaClass
  getName()Ljava/lang/String; = Name
  getTestMethods()Ljava/util/List; = TestMethods
  getAnnotatedMethods(Ljava/lang/Class;)Ljava/util/List; = GetAnnotatedMethods(Java.Lang.Class)
org/junit/internal/runners/TestMethod = Org.Junit.Internal.Runners.TestMethod
  <init>(Ljava/lang/reflect/Method;Lorg/junit/internal/runners/TestClass;)V = .ctor(Java.Lang.Reflect.Method, Org.Junit.Internal.Runners.TestClass)
  getExpectedException()Ljava/lang/Class; = ExpectedException
  isIgnored()Z = IsIgnored
  getTimeout()J = Timeout
  invoke(Ljava/lang/Object;)V = Invoke(Java.Lang.Object)
org/junit/internal/Throwables = Org.Junit.Internal.Throwables
  rethrowAsException(Ljava/lang/Throwable;)Ljava/lang/Exception; = RethrowAsException(Java.Lang.Throwable)
org/junit/matchers/JUnitMatchers = Org.Junit.Matchers.JUnitMatchers
  <init>()V = .ctor()
org/junit/Rule = Org.Junit.IRule
org/junit/rules/DisableOnDebug = Org.Junit.Rules.DisableOnDebug
  isDebugging()Z = IsDebugging
org/junit/rules/ErrorCollector = Org.Junit.Rules.ErrorCollector
  <init>()V = .ctor()
  addError(Ljava/lang/Throwable;)V = AddError(Java.Lang.Throwable)
  checkSucceeds(Ljava/util/concurrent/Callable;)Ljava/lang/Object; = CheckSucceeds(Java.Util.Concurrent.ICallable)
org/junit/rules/ExpectedException = Org.Junit.Rules.ExpectedException
  expect(Ljava/lang/Class;)V = Expect(Java.Lang.Class)
  expectMessage(Ljava/lang/String;)V = ExpectMessage(string)
  handleAssertionErrors()Lorg/junit/rules/ExpectedException; = HandleAssertionErrors()
  handleAssumptionViolatedExceptions()Lorg/junit/rules/ExpectedException; = HandleAssumptionViolatedExceptions()
  none()Lorg/junit/rules/ExpectedException; = None()
  reportMissingExceptionWithMessage(Ljava/lang/String;)Lorg/junit/rules/ExpectedException; = ReportMissingExceptionWithMessage(string)
org/junit/rules/ExternalResource = Org.Junit.Rules.ExternalResource
  <init>()V = .ctor()
  after()V = After()
  before()V = Before()
org/junit/rules/RuleChain = Org.Junit.Rules.RuleChain
  emptyRuleChain()Lorg/junit/rules/RuleChain; = EmptyRuleChain()
org/junit/rules/Stopwatch = Org.Junit.Rules.Stopwatch
  <init>()V = .ctor()
  runtime(Ljava/util/concurrent/TimeUnit;)J = Runtime(Java.Util.Concurrent.TimeUnit)
org/junit/rules/TemporaryFolder = Org.Junit.Rules.TemporaryFolder
  <init>()V = .ctor()
  <init>(Ljava/io/File;)V = .ctor(Java.IO.File)
  getRoot()Ljava/io/File; = Root
  create()V = Create()
  delete()V = Delete()
  newFile()Ljava/io/File; = NewFile()
  newFile(Ljava/lang/String;)Ljava/io/File; = NewFile(string)
  newFolder()Ljava/io/File; = NewFolder()
  newFolder(Ljava/lang/String;)Ljava/io/File; = NewFolder(string)
  newFolder([Ljava/lang/String;)Ljava/io/File; = NewFolder(params string[])
org/junit/rules/TestName = Org.Junit.Rules.TestName
  <init>()V = .ctor()
  getMethodName()Ljava/lang/String; = MethodName
org/junit/rules/TestWatcher = Org.Junit.Rules.TestWatcher
  <init>()V = .ctor()
org/junit/rules/TestWatchman = Org.Junit.Rules.TestWatchman
  <init>()V = .ctor()
org/junit/rules/Timeout = Org.Junit.Rules.Timeout
  <init>(I)V = .ctor(int)
  <init>(JLjava/util/concurrent/TimeUnit;)V = .ctor(long, Java.Util.Concurrent.TimeUnit)
  <init>(Lorg/junit/rules/Timeout$Builder;)V = .ctor(Org.Junit.Rules.Timeout.Builder)
  getLookingForStuckThread()Z = LookingForStuckThread
  getTimeout(Ljava/util/concurrent/TimeUnit;)J = GetTimeout(Java.Util.Concurrent.TimeUnit)
  builder()Lorg/junit/rules/Timeout$Builder; = InvokeBuilder()
  millis(J)Lorg/junit/rules/Timeout; = Millis(long)
  seconds(J)Lorg/junit/rules/Timeout; = Seconds(long)
org/junit/rules/Verifier = Org.Junit.Rules.Verifier
  <init>()V = .ctor()
  verify()V = Verify()
org/junit/Test = Org.Junit.ITest
  expected()Ljava/lang/Class; = Expected()
  timeout()J = Timeout()
org/junit/validator/AnnotationsValidator = Org.Junit.Validator.AnnotationsValidator
  <init>()V = .ctor()
org/junit/validator/AnnotationValidator = Org.Junit.Validator.AnnotationValidator
  <init>()V = .ctor()
org/junit/validator/AnnotationValidatorFactory = Org.Junit.Validator.AnnotationValidatorFactory
  <init>()V = .ctor()
  createAnnotationValidator(Lorg/junit/validator/ValidateWith;)Lorg/junit/validator/AnnotationValidator; = CreateAnnotationValidator(Org.Junit.Validator.IValidateWith)
org/junit/validator/PublicClassValidator = Org.Junit.Validator.PublicClassValidator
  <init>()V = .ctor()
org/junit/validator/ValidateWith = Org.Junit.Validator.IValidateWith
  value()Ljava/lang/Class; = Value()
